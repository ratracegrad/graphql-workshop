(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{501:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("nodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.")]),t._v(" "),t._m(2),t._v(" "),s("p",[s("a",{attrs:{href:"https://npmjs.org/package/nodemon",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badge.fury.io/js/nodemon.svg",alt:"NPM version"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://travis-ci.org/remy/nodemon",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://travis-ci.org/remy/nodemon.svg?branch=master",alt:"Travis Status"}}),s("OutboundLink")],1),t._v(" "),t._m(3),t._v(" "),t._m(4)]),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("Either through cloning with git or by using "),s("a",{attrs:{href:"http://npmjs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),s("OutboundLink")],1),t._v(" (the recommended way):")]),t._v(" "),t._m(6),s("p",[t._v("And nodemon will be installed globally to your system path.")]),t._v(" "),s("p",[t._v("You can also install nodemon as a development dependency:")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("nodemon wraps your application, so you can pass all the arguments you would normally pass to your app:")]),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),s("p",[t._v("Using nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so:")]),t._v(" "),t._m(13),t._m(14),t._v(" "),s("p",[t._v("If no script is given, nodemon will test for a "),s("code",[t._v("package.json")]),t._v(" file and if found, will run the file associated with the "),s("em",[t._v("main")]),t._v(" property ("),s("a",{attrs:{href:"https://github.com/remy/nodemon/issues/14",target:"_blank",rel:"noopener noreferrer"}},[t._v("ref"),s("OutboundLink")],1),t._v(").")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("Also check out the "),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/faq.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("FAQ"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://github.com/remy/nodemon/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),s("OutboundLink")],1),t._v(" for nodemon.")]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("nodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("The specificity is as follows, so that a command line argument will always override the config file settings:")]),t._v(" "),t._m(24),t._v(" "),s("p",[t._v("A config file can take any of the command line arguments as JSON key values, for example:")]),t._v(" "),t._m(25),t._m(26),t._v(" "),s("p",[t._v("A further example of options can be seen in "),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("sample-nodemon.md"),s("OutboundLink")],1)]),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),s("p",[s("em",[t._v("This section needs better documentation, but for now you can also see "),s("code",[t._v("nodemon --help config")]),t._v(" ("),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/doc/cli/config.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("also here"),s("OutboundLink")],1),t._v(")")]),t._v(".")]),t._v(" "),t._m(31),t._v(" "),s("p",[t._v("Please see "),s("router-link",{attrs:{to:"./doc/requireable.html"}},[t._v("doc/requireable.md")])],1),t._v(" "),t._m(32),t._v(" "),s("p",[t._v("Please see "),s("router-link",{attrs:{to:"./doc/events.html#Using_nodemon_as_child_process"}},[t._v("doc/events.md")])],1),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),s("p",[t._v("It's generally recommended to use the global "),s("code",[t._v("nodemon.json")]),t._v(" to add your own "),s("code",[t._v("execMap")]),t._v(" options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing "),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/lib/config/defaults.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("default.js"),s("OutboundLink")],1),t._v(" and sending a pull request.")]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),s("p",[t._v("This can be done via the command line:")]),t._v(" "),t._m(54),s("p",[t._v("Or specific files can be ignored:")]),t._v(" "),t._m(55),s("p",[t._v("Patterns can also be ignored (but be sure to quote the arguments):")]),t._v(" "),t._m(56),s("p",[t._v("Note that by default, nodemon will ignore the "),s("code",[t._v(".git")]),t._v(", "),s("code",[t._v("node_modules")]),t._v(", "),s("code",[t._v("bower_components")]),t._v(", "),s("code",[t._v(".nyc_output")]),t._v(", "),s("code",[t._v("coverage")]),t._v(" and "),s("code",[t._v(".sass-cache")]),t._v(" directories and "),s("em",[t._v("add")]),t._v(" your ignored patterns to the list. If you want to indeed watch a directory like "),s("code",[t._v("node_modules")]),t._v(", you need to "),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("override the underlying default ignore rules"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),s("p",[t._v("Though this should be a last resort as it will poll every file it can find.")]),t._v(" "),t._m(61),t._v(" "),s("p",[t._v("In some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily.")]),t._v(" "),t._m(62),t._v(" "),t._m(63),s("p",[t._v("For more precision, milliseconds can be specified.  Either as a float:")]),t._v(" "),t._m(64),s("p",[t._v("Or using the time specifier (ms):")]),t._v(" "),t._m(65),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),s("p",[t._v("It is possible to have nodemon send any signal that you specify to your application.")]),t._v(" "),t._m(70),s("p",[t._v("Your application can handle the signal as follows.")]),t._v(" "),t._m(71),s("p",[t._v("Please note that nodemon will send this signal to every process in the process tree.")]),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),s("p",[t._v("nodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.")]),t._v(" "),t._m(75),t._v(" "),t._m(76),s("p",[t._v("Note that the "),s("code",[t._v("process.kill")]),t._v(" is "),s("em",[t._v("only")]),t._v(" called once your shutdown jobs are complete. Hat tip to "),s("a",{attrs:{href:"http://www.benjiegillam.com/2011/08/node-js-clean-restart-and-faster-development-with-nodemon/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Benjie Gillam"),s("OutboundLink")],1),t._v(" for writing this technique up.")]),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),s("p",[t._v("A full list of available events is listed on the "),s("a",{attrs:{href:"https://github.com/remy/nodemon/wiki/Events#states",target:"_blank",rel:"noopener noreferrer"}},[t._v("event states wiki"),s("OutboundLink")],1),t._v(". Note that you can bind to both states and messages.")]),t._v(" "),t._m(81),t._v(" "),t._m(82),t._m(83),t._v(" "),s("p",[t._v("Check out the "),s("a",{attrs:{href:"https://github.com/JacksonGariety/gulp-nodemon",target:"_blank",rel:"noopener noreferrer"}},[t._v("gulp-nodemon"),s("OutboundLink")],1),t._v(" plugin to integrate nodemon with the rest of your project's gulp workflow.")]),t._v(" "),t._m(84),t._v(" "),s("p",[t._v("Check out the "),s("a",{attrs:{href:"https://github.com/ChrisWren/grunt-nodemon",target:"_blank",rel:"noopener noreferrer"}},[t._v("grunt-nodemon"),s("OutboundLink")],1),t._v(" plugin to integrate nodemon with the rest of your project's grunt workflow.")]),t._v(" "),t._m(85),t._v(" "),t._m(86),t._v(" "),s("p",[t._v("Well...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is.")]),t._v(" "),s("p",[t._v("The answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct 😃")]),t._v(" "),t._m(87),t._v(" "),t._m(88),t._v(" "),s("p",[t._v("Nodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day.")]),t._v(" "),t._m(89),t._v(" "),s("p",[t._v("See the "),s("a",{attrs:{href:"https://github.com/remy/nodemon/blob/master/faq.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("FAQ"),s("OutboundLink")],1),t._v(" and please add your own questions if you think they would help others.")]),t._v(" "),t._m(90),t._v(" "),s("p",[t._v("Thank you to all "),s("a",{attrs:{href:"https://opencollective.com/nodemon#backer",target:"_blank",rel:"noopener noreferrer"}},[t._v("our backers"),s("OutboundLink")],1),t._v("! 🙏")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://opencollective.com/nodemon#backers",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://opencollective.com/nodemon/backers.svg?width=890",alt:"nodemon backers"}}),s("OutboundLink")],1)]),t._v(" "),t._m(91),t._v(" "),s("p",[t._v("Support this project by becoming a sponsor. Your logo will show up here with a link to your website. "),s("a",{attrs:{href:"https://opencollective.com/nodemon#sponsor",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sponsor this project today ❤️"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://sparkpo.st/nodemon",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://user-images.githubusercontent.com/13700/35731651-677aa3fc-080e-11e8-8580-75fa92db56ec.png",width:"200"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mixmax.com",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://user-images.githubusercontent.com/13700/35731622-421d4466-080e-11e8-8ddc-11c70e1cd79e.png",width:"200"}}),s("OutboundLink")],1)]),t._v(" "),t._m(92),t._v(" "),s("p",[t._v("MIT "),s("a",{attrs:{href:"http://rem.mit-license.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://rem.mit-license.org"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("p",{attrs:{align:"center"}},[e("img",{attrs:{src:"https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png",alt:"Nodemon Logo"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"nodemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodemon","aria-hidden":"true"}},[this._v("#")]),this._v(" nodemon")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("nodemon does "),s("strong",[t._v("not")]),t._v(" require "),s("em",[t._v("any")]),t._v(" additional changes to your code or method of development. nodemon is a replacement wrapper for "),s("code",[t._v("node")]),t._v(", to use "),s("code",[t._v("nodemon")]),t._v(" replace the word "),s("code",[t._v("node")]),t._v(" on the command line when executing your script.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("a",{attrs:{href:"#backers"}},[e("img",{attrs:{src:"https://opencollective.com/nodemon/backers/badge.svg",alt:"Backers on Open Collective"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("a",{attrs:{href:"#sponsors"}},[e("img",{attrs:{src:"https://opencollective.com/nodemon/sponsors/badge.svg",alt:"Sponsors on Open Collective"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" -g nodemon\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" --save-dev nodemon\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as "),e("code",[this._v("npm start")]),this._v(") or using "),e("code",[this._v("npx nodemon")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Usage")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("[")]),this._v("your node app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("]")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For CLI options, use the "),e("code",[this._v("-h")]),this._v(" (or "),e("code",[this._v("--help")]),this._v(") argument:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon -h\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon ./server.js localhost 8080\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Any output from this script is prefixed with "),e("code",[this._v("[nodemon]")]),this._v(", otherwise all output from your application, errors included, will be echoed out as expected.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can also pass the "),e("code",[this._v("inspect")]),this._v(" flag to node through the command line as you would normally:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --inspect ./server.js 80\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you have a "),e("code",[this._v("package.json")]),this._v(" file for your app, you can omit the main script entirely and nodemon will read the "),e("code",[this._v("package.json")]),this._v(" for the "),e("code",[this._v("main")]),this._v(" property and use that value as the app.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("nodemon will also search for the "),e("code",[this._v("scripts.start")]),this._v(" property in "),e("code",[this._v("package.json")]),this._v(" (as of nodemon 1.1.x).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"automatic-re-running"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#automatic-re-running","aria-hidden":"true"}},[this._v("#")]),this._v(" Automatic re-running")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"manual-restarting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#manual-restarting","aria-hidden":"true"}},[this._v("#")]),this._v(" Manual restarting")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Whilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type "),e("code",[this._v("rs")]),this._v(" with a carriage return, and nodemon will restart your process.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"config-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Config files")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("nodemon supports local and global configuration files. These are usually named "),e("code",[this._v("nodemon.json")]),this._v(" and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the "),e("code",[this._v("--config <file>")]),this._v(" option.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("command line arguments")]),this._v(" "),e("li",[this._v("local config")]),this._v(" "),e("li",[this._v("global config")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"verbose"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ignore"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.test.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fixtures/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"execMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n    "rb'),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v('ruby"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "pde'),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v("processing --sketch="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' --run"\n  '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The above "),e("code",[this._v("nodemon.json")]),this._v(" file might be my global config so that I have support for ruby files and processing files, and I can run "),e("code",[this._v("nodemon demo.pde")]),this._v(" and nodemon will automatically know how to run the script even though out of the box support for processing scripts.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-json","aria-hidden":"true"}},[this._v("#")]),this._v(" package.json")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("If you want to keep all your package configurations in one place, nodemon supports using "),s("code",[t._v("package.json")]),t._v(" for configuration.\nSpecify the config in the same format as you would for a config file but under "),s("code",[t._v("nodemonConfig")]),t._v(" in the "),s("code",[t._v("package.json")]),t._v(" file, for example, take the following "),s("code",[t._v("package.json")]),t._v(":")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nodemon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"homepage"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://nodemon.io"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"..."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"... other standard package.json values"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nodemonConfig"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ignore"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"delay"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2500"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Note that if you specify a "),e("code",[this._v("--config")]),this._v(" file or provide a local "),e("code",[this._v("nodemon.json")]),this._v(" any "),e("code",[this._v("package.json")]),this._v(" config is ignored.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"using-nodemon-as-a-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-nodemon-as-a-module","aria-hidden":"true"}},[this._v("#")]),this._v(" Using nodemon as a module")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"using-nodemon-as-child-process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-nodemon-as-child-process","aria-hidden":"true"}},[this._v("#")]),this._v(" Using nodemon as child process")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"running-non-node-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-non-node-scripts","aria-hidden":"true"}},[this._v("#")]),this._v(" Running non-node scripts")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of "),e("code",[this._v(".js")]),this._v(" if there's no "),e("code",[this._v("nodemon.json")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --exec "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v('"python -v"')]),this._v(" ./app.py\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Now nodemon will run "),e("code",[this._v("app.py")]),this._v(" with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the "),e("code",[this._v(".py")]),this._v(" extension.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"default-executables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#default-executables","aria-hidden":"true"}},[this._v("#")]),this._v(" Default executables")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Using the "),e("code",[this._v("nodemon.json")]),this._v(" config file, you can define your own default executables using the "),e("code",[this._v("execMap")]),this._v(" property. This is particularly useful if you're working with a language that isn't supported by default by nodemon.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To add support for nodemon to know about the "),e("code",[this._v(".pl")]),this._v(" extension (for Perl), the "),e("code",[this._v("nodemon.json")]),this._v(" file would add:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"execMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pl"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"perl"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Now running the following, nodemon will know to use "),e("code",[this._v("perl")]),this._v(" as the executable:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon script.pl\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"monitoring-multiple-directories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monitoring-multiple-directories","aria-hidden":"true"}},[this._v("#")]),this._v(" Monitoring multiple directories")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default nodemon monitors the current working directory. If you want to take control of that option, use the "),e("code",[this._v("--watch")]),this._v(" option to add specific paths:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --watch app --watch libs app/server.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Now nodemon will only restart if there are changes in the "),e("code",[this._v("./app")]),this._v(" or "),e("code",[this._v("./libs")]),this._v(" directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Don't use unix globbing to pass multiple directories, e.g "),e("code",[this._v("--watch ./lib/*")]),this._v(", it won't work. You need a "),e("code",[this._v("--watch")]),this._v(" flag per directory watched.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"specifying-extension-watch-list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specifying-extension-watch-list","aria-hidden":"true"}},[this._v("#")]),this._v(" Specifying extension watch list")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("By default, nodemon looks for files with the "),s("code",[t._v(".js")]),t._v(", "),s("code",[t._v(".mjs")]),t._v(", "),s("code",[t._v(".coffee")]),t._v(", "),s("code",[t._v(".litcoffee")]),t._v(", and "),s("code",[t._v(".json")]),t._v(" extensions. If you use the "),s("code",[t._v("--exec")]),t._v(" option and monitor "),s("code",[t._v("app.py")]),t._v(" nodemon will monitor files with the extension of "),s("code",[t._v(".py")]),t._v(". However, you can specify your own list with the "),s("code",[t._v("-e")]),t._v(" (or "),s("code",[t._v("--ext")]),t._v(") switch like so:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon -e js,jade\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions "),e("code",[this._v(".js")]),this._v(", "),e("code",[this._v(".jade")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"ignoring-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignoring-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Ignoring files")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default, nodemon will only restart when a "),e("code",[this._v(".js")]),this._v(" JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --ignore lib/ --ignore tests/\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --ignore lib/app.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --ignore "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v("'lib/*.js'")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"application-isn-t-restarting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-isn-t-restarting","aria-hidden":"true"}},[this._v("#")]),this._v(" Application isn't restarting")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the "),e("code",[this._v("legacyWatch: true")]),this._v(" which enables Chokidar's polling.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Via the CLI, use either "),e("code",[this._v("--legacy-watch")]),this._v(" or "),e("code",[this._v("-L")]),this._v(" for short:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon -L\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"delaying-restarting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delaying-restarting","aria-hidden":"true"}},[this._v("#")]),this._v(" Delaying restarting")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To add an extra throttle, or delay restarting, use the "),e("code",[this._v("--delay")]),this._v(" command:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --delay 10 server.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --delay 2.5 server.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --delay 2500ms server.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the "),e("em",[this._v("last")]),this._v(" file change.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you are setting this value in "),e("code",[this._v("nodemon.json")]),this._v(", the value will always be interpreted in milliseconds. E.g., the following are equivalent:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("nodemon --delay 2.5\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delay"')]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2500"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"gracefully-reloading-down-your-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gracefully-reloading-down-your-script","aria-hidden":"true"}},[this._v("#")]),this._v(" Gracefully reloading down your script")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("nodemon --signal SIGHUP server.js\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SIGHUP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reloadSomeConfiguration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("If you are using "),s("code",[t._v("cluster")]),t._v(", then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a "),s("code",[t._v("SIGHUP")]),t._v(", a common pattern is to catch the "),s("code",[t._v("SIGHUP")]),t._v(" in the master, and forward "),s("code",[t._v("SIGTERM")]),t._v(" to all workers, while ensuring that all workers ignore "),s("code",[t._v("SIGHUP")]),t._v(".")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMaster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SIGHUP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("workers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SIGTERM"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SIGHUP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"controlling-shutdown-of-your-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#controlling-shutdown-of-your-script","aria-hidden":"true"}},[this._v("#")]),this._v(" Controlling shutdown of your script")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The following example will listen once for the "),e("code",[this._v("SIGUSR2")]),this._v(" signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGUSR2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gracefulShutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGUSR2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"triggering-events-when-nodemon-state-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#triggering-events-when-nodemon-state-changes","aria-hidden":"true"}},[this._v("#")]),this._v(" Triggering events when nodemon state changes")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either "),e("code",[this._v("require")]),this._v(" nodemon or add event actions to your "),e("code",[this._v("nodemon.json")]),this._v(" file.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For example, to trigger a notification on a Mac when nodemon restarts, "),e("code",[this._v("nodemon.json")]),this._v(" looks like this:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"events"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"restart"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"osascript -e \'display notification \\"app restarted\\" with title \\"nodemon\\"\'"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pipe-output-to-somewhere-else"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipe-output-to-somewhere-else","aria-hidden":"true"}},[this._v("#")]),this._v(" Pipe output to somewhere else")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nodemon")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// important: this tells nodemon not to output to console")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the `readable` event indicates that data is ready to pick up")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'output.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'err.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"using-nodemon-in-your-gulp-workflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-nodemon-in-your-gulp-workflow","aria-hidden":"true"}},[this._v("#")]),this._v(" Using nodemon in your gulp workflow")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"using-nodemon-in-your-grunt-workflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-nodemon-in-your-grunt-workflow","aria-hidden":"true"}},[this._v("#")]),this._v(" Using nodemon in your Grunt workflow")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pronunciation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pronunciation","aria-hidden":"true"}},[this._v("#")]),this._v(" Pronunciation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pokémon)?")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"design-principles"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#design-principles","aria-hidden":"true"}},[this._v("#")]),this._v(" Design principles")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Less flags is better")]),t._v(" "),s("li",[t._v("Works across all platforms")]),t._v(" "),s("li",[t._v("Less features")]),t._v(" "),s("li",[t._v("Let individuals build on top of nodemon")]),t._v(" "),s("li",[t._v("Offer all CLI functionality as an API")]),t._v(" "),s("li",[t._v("Contributions must have and pass tests")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"faq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#faq","aria-hidden":"true"}},[this._v("#")]),this._v(" FAQ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"backers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#backers","aria-hidden":"true"}},[this._v("#")]),this._v(" Backers")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"sponsors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sponsors","aria-hidden":"true"}},[this._v("#")]),this._v(" Sponsors")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])}],!1,null,null,null);e.default=a.exports}}]);