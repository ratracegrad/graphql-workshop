(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{489:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("Definition:")]),t._v(" "),t._m(6),n("p",[t._v("See the Node documentation on "),n("a",{attrs:{href:"https://nodejs.org/api/addons.html#addons_wrapping_c_objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wrapping C++ Objects"),n("OutboundLink")],1),t._v(" for more details.")]),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("When calling "),n("code",[t._v("Unwrap")]),t._v(", it is important that the argument is indeed some JavaScript object which got wrapped by a "),n("code",[t._v("Wrap")]),t._v(" call for this class or any derived class.\nThe "),n("code",[t._v("Signature")]),t._v(" installed by "),n("router-link",{attrs:{to:"./methods.html#api_nan_set_prototype_method"}},[n("code",[t._v("Nan::SetPrototypeMethod()")])]),t._v(" does ensure that "),n("code",[t._v("info.Holder()")]),t._v(" is just such an instance.\nIn Node 0.12 and later, "),n("code",[t._v("info.This()")]),t._v(" will also be of such a type, since otherwise the invocation will get rejected.\nHowever, in Node 0.10 and before it was possible to invoke a method on a JavaScript object which just had the extension type in its prototype chain.\nIn such a situation, calling "),n("code",[t._v("Unwrap")]),t._v(" on "),n("code",[t._v("info.This()")]),t._v(" will likely lead to a failed assertion causing a crash, but could lead to even more serious corruption.")],1),t._v(" "),n("p",[t._v("On the other hand, calling "),n("code",[t._v("Unwrap")]),t._v(" in an "),n("router-link",{attrs:{to:"./methods.html#api_nan_set_accessor"}},[t._v("accessor")]),t._v(" should not use "),n("code",[t._v("Holder()")]),t._v(" if the accessor is defined on the prototype.\nSo either define your accessors on the instance template,\nor use "),n("code",[t._v("This()")]),t._v(" after verifying that it is indeed a valid object.")],1),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),n("p",[t._v("To use in Javascript:")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),n("p",[t._v("To use in Javascript:")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),n("p",[t._v("To use in Javascript:")]),t._v(" "),t._m(18)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"object-wrappers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-wrappers","aria-hidden":"true"}},[this._v("#")]),this._v(" Object Wrappers")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The "),e("code",[this._v("ObjectWrap")]),this._v(" class can be used to make wrapped C++ objects and a factory of wrapped objects.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("a",{attrs:{href:"#api_nan_object_wrap"}},[e("b",[e("code",[this._v("Nan::ObjectWrap")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("a",{attrs:{name:"api_nan_object_wrap"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"nan-objectwrap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nan-objectwrap","aria-hidden":"true"}},[this._v("#")]),this._v(" Nan::ObjectWrap()")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("A reimplementation of "),e("code",[this._v("node::ObjectWrap")]),this._v(" that adds some API not present in older versions of Node. Should be preferred over "),e("code",[this._v("node::ObjectWrap")]),this._v(" in all cases for consistency.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('class ObjectWrap {\n public:\n  ObjectWrap();\n\n  virtual ~ObjectWrap();\n\n  template <class T>\n  static inline T* Unwrap(v8::Local<v8::Object> handle);\n\n  inline v8::Local<v8::Object> handle();\n\n  inline Nan::Persistent<v8::Object>& persistent();\n\n protected:\n  inline void Wrap(v8::Local<v8::Object> handle);\n\n  inline void MakeWeak();\n\n  /* Ref() marks the object as being attached to an event loop.\n   * Refed objects will not be garbage collected, even if\n   * all references are lost.\n   */\n  virtual void Ref();\n\n  /* Unref() marks an object as detached from the event loop.  This is its\n   * default state.  When an object with a "weak" reference changes from\n   * attached to detached state it will be freed. Be careful not to access\n   * the object after making this call as it might be gone!\n   * (A "weak reference" means an object that only has a\n   * persistant handle.)\n   *\n   * DO NOT CALL THIS FROM DESTRUCTOR\n   */\n  virtual void Unref();\n\n  int refs_;  // ro\n};\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"this-vs-holder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#this-vs-holder","aria-hidden":"true"}},[this._v("#")]),this._v(" This vs. Holder")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"basic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic","aria-hidden":"true"}},[this._v("#")]),this._v(" Basic")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('class MyObject : public Nan::ObjectWrap {\n public:\n  static NAN_MODULE_INIT(Init) {\n    v8::Local<v8::FunctionTemplate> tpl = Nan::New<v8::FunctionTemplate>(New);\n    tpl->SetClassName(Nan::New("MyObject").ToLocalChecked());\n    tpl->InstanceTemplate()->SetInternalFieldCount(1);\n\n    Nan::SetPrototypeMethod(tpl, "getHandle", GetHandle);\n    Nan::SetPrototypeMethod(tpl, "getValue", GetValue);\n\n    constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());\n    Nan::Set(target, Nan::New("MyObject").ToLocalChecked(),\n      Nan::GetFunction(tpl).ToLocalChecked());\n  }\n\n private:\n  explicit MyObject(double value = 0) : value_(value) {}\n  ~MyObject() {}\n\n  static NAN_METHOD(New) {\n    if (info.IsConstructCall()) {\n      double value = info[0]->IsUndefined() ? 0 : Nan::To<double>(info[0]).FromJust();\n      MyObject *obj = new MyObject(value);\n      obj->Wrap(info.This());\n      info.GetReturnValue().Set(info.This());\n    } else {\n      const int argc = 1;\n      v8::Local<v8::Value> argv[argc] = {info[0]};\n      v8::Local<v8::Function> cons = Nan::New(constructor());\n      info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n    }\n  }\n\n  static NAN_METHOD(GetHandle) {\n    MyObject* obj = Nan::ObjectWrap::Unwrap<MyObject>(info.Holder());\n    info.GetReturnValue().Set(obj->handle());\n  }\n\n  static NAN_METHOD(GetValue) {\n    MyObject* obj = Nan::ObjectWrap::Unwrap<MyObject>(info.Holder());\n    info.GetReturnValue().Set(obj->value_);\n  }\n\n  static inline Nan::Persistent<v8::Function> & constructor() {\n    static Nan::Persistent<v8::Function> my_constructor;\n    return my_constructor;\n  }\n\n  double value_;\n};\n\nNODE_MODULE(objectwrapper, MyObject::Init)\n')])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-Javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" objectwrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bindings'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objectwrapper'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objectwrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Should be 5: '")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"factory-of-wrapped-objects"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factory-of-wrapped-objects","aria-hidden":"true"}},[this._v("#")]),this._v(" Factory of wrapped objects")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('class MyFactoryObject : public Nan::ObjectWrap {\n public:\n  static NAN_MODULE_INIT(Init) {\n    v8::Local<v8::FunctionTemplate> tpl = Nan::New<v8::FunctionTemplate>(New);\n    tpl->InstanceTemplate()->SetInternalFieldCount(1);\n\n    Nan::SetPrototypeMethod(tpl, "getValue", GetValue);\n\n    constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());\n  }\n\n  static NAN_METHOD(NewInstance) {\n    v8::Local<v8::Function> cons = Nan::New(constructor());\n    double value = info[0]->IsNumber() ? Nan::To<double>(info[0]).FromJust() : 0;\n    const int argc = 1;\n    v8::Local<v8::Value> argv[1] = {Nan::New(value)};\n    info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n  }\n\n  // Needed for the next example:\n  inline double value() const {\n    return value_;\n  }\n\n private:\n  explicit MyFactoryObject(double value = 0) : value_(value) {}\n  ~MyFactoryObject() {}\n\n  static NAN_METHOD(New) {\n    if (info.IsConstructCall()) {\n      double value = info[0]->IsNumber() ? Nan::To<double>(info[0]).FromJust() : 0;\n      MyFactoryObject * obj = new MyFactoryObject(value);\n      obj->Wrap(info.This());\n      info.GetReturnValue().Set(info.This());\n    } else {\n      const int argc = 1;\n      v8::Local<v8::Value> argv[argc] = {info[0]};\n      v8::Local<v8::Function> cons = Nan::New(constructor());\n      info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n    }\n  }\n\n  static NAN_METHOD(GetValue) {\n    MyFactoryObject* obj = ObjectWrap::Unwrap<MyFactoryObject>(info.Holder());\n    info.GetReturnValue().Set(obj->value_);\n  }\n\n  static inline Nan::Persistent<v8::Function> & constructor() {\n    static Nan::Persistent<v8::Function> my_constructor;\n    return my_constructor;\n  }\n\n  double value_;\n};\n\nNAN_MODULE_INIT(Init) {\n  MyFactoryObject::Init(target);\n  Nan::Set(target,\n    Nan::New<v8::String>("newFactoryObjectInstance").ToLocalChecked(),\n    Nan::GetFunction(\n      Nan::New<v8::FunctionTemplate>(MyFactoryObject::NewInstance)).ToLocalChecked()\n  );\n}\n\nNODE_MODULE(wrappedobjectfactory, Init)\n')])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-Javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wrappedobjectfactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bindings'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wrappedobjectfactory'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wrappedobjectfactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFactoryObjectInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Should be 10: '")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"passing-wrapped-objects-around"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#passing-wrapped-objects-around","aria-hidden":"true"}},[this._v("#")]),this._v(" Passing wrapped objects around")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Use the "),e("code",[this._v("MyFactoryObject")]),this._v(" class above along with the following:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('static NAN_METHOD(Sum) {\n  Nan::MaybeLocal<v8::Object> maybe1 = Nan::To<v8::Object>(info[0]);\n  Nan::MaybeLocal<v8::Object> maybe2 = Nan::To<v8::Object>(info[1]);\n\n  // Quick check:\n  if (maybe1.IsEmpty() || maybe2.IsEmpty()) {\n    // return value is undefined by default\n    return;\n  }\n\n  MyFactoryObject* obj1 =\n    Nan::ObjectWrap::Unwrap<MyFactoryObject>(maybe1.ToLocalChecked());\n  MyFactoryObject* obj2 =\n    Nan::ObjectWrap::Unwrap<MyFactoryObject>(maybe2.ToLocalChecked());\n\n  info.GetReturnValue().Set(Nan::New<v8::Number>(obj1->value() + obj2->value()));\n}\n\nNAN_MODULE_INIT(Init) {\n  MyFactoryObject::Init(target);\n  Nan::Set(target,\n    Nan::New<v8::String>("newFactoryObjectInstance").ToLocalChecked(),\n    Nan::GetFunction(\n      Nan::New<v8::FunctionTemplate>(MyFactoryObject::NewInstance)).ToLocalChecked()\n  );\n  Nan::Set(target,\n    Nan::New<v8::String>("sum").ToLocalChecked(),\n    Nan::GetFunction(Nan::New<v8::FunctionTemplate>(Sum)).ToLocalChecked()\n  );\n}\n\nNODE_MODULE(myaddon, Init)\n')])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-Javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myaddon "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bindings'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myaddon'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myaddon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFactoryObjectInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myaddon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFactoryObjectInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sum of object values: '")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" myaddon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);e.default=s.exports}}]);