(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{376:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[a("a",{attrs:{href:"https://travis-ci.org/npm/node-tar",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://travis-ci.org/npm/node-tar.svg?branch=master",alt:"Build Status"}}),a("OutboundLink")],1)]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),a("p",[e._v("Tar has 5 main top-level commands:")]),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("The other flags and options modify how this top level function works.")]),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("All the high-level functions take the following arguments, all three\nof which are optional and may be omitted.")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),a("p",[e._v("Some things cause tar to emit a warning, but should usually not cause\nthe entire operation to fail.  There are three ways to handle\nwarnings:")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._m(20),e._v(" "),e._m(21),e._m(22),e._v(" "),e._m(23),e._m(24),e._v(" "),e._m(25),e._m(26),e._v(" "),e._m(27),e._m(28),e._v(" "),e._m(29),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),a("p",[e._v("Keep reading for all the command descriptions and options, as well as\nthe low-level API that they are built on.")]),e._v(" "),e._m(35),e._v(" "),a("p",[e._v("Create a tarball archive.")]),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(38),e._v(" "),a("p",[e._v("The following options are mostly internal, but can be modified in some\nadvanced use cases, such as re-using caches between runs.")]),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),a("p",[e._v("Extract a tarball archive.")]),e._v(" "),e._m(41),e._v(" "),a("p",[e._v("If the archive is gzipped, then tar will detect this and unzip it.")]),e._v(" "),a("p",[e._v("Note that all directories that are created will be forced to be\nwritable, readable, and listable by their owner, to avoid cases where\na directory prevents extraction of child entries by virtue of its\nmode.")]),e._v(" "),e._m(42),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(43),e._v(" "),a("p",[e._v("The following options are mostly internal, but can be modified in some\nadvanced use cases, such as re-using caches between runs.")]),e._v(" "),e._m(44),e._v(" "),a("p",[e._v("Note that using an asynchronous stream type with the "),a("code",[e._v("transform")]),e._v("\noption will cause undefined behavior in sync extractions.\n"),a("a",{attrs:{href:"http://npm.im/minipass",target:"_blank",rel:"noopener noreferrer"}},[e._v("MiniPass"),a("OutboundLink")],1),e._v("-based streams are designed for this\nuse case.")]),e._v(" "),e._m(45),e._v(" "),a("p",[e._v("List the contents of a tarball archive.")]),e._v(" "),e._m(46),e._v(" "),a("p",[e._v("If the archive is gzipped, then tar will detect this and unzip it.")]),e._v(" "),e._m(47),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(48),e._v(" "),e._m(49),e._v(" "),a("p",[e._v("Add files to an archive if they are newer than the entry already in\nthe tarball archive.")]),e._v(" "),e._m(50),e._v(" "),e._m(51),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),a("p",[e._v("Add files to an existing archive.  Because later entries override\nearlier entries, this effectively replaces any existing entries.")]),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(56),e._v(" "),e._m(57),e._v(" "),e._m(58),e._v(" "),a("p",[e._v("A readable tar stream.")]),e._v(" "),e._m(59),e._v(" "),e._m(60),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(61),e._v(" "),e._m(62),e._v(" "),a("p",[e._v("Adds an entry to the archive.  Returns the Pack stream.")]),e._v(" "),e._m(63),e._v(" "),a("p",[e._v("Adds an entry to the archive.  Returns true if flushed.")]),e._v(" "),e._m(64),e._v(" "),a("p",[e._v("Finishes the archive.")]),e._v(" "),e._m(65),e._v(" "),e._m(66),e._v(" "),e._m(67),e._v(" "),a("p",[e._v("A writable stream that unpacks a tar archive onto the file system.")]),e._v(" "),e._m(68),e._v(" "),a("p",[e._v("Note that all directories that are created will be forced to be\nwritable, readable, and listable by their owner, to avoid cases where\na directory prevents extraction of child entries by virtue of its\nmode.")]),e._v(" "),e._m(69),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),e._m(72),e._v(" "),e._m(73),e._v(" "),e._m(74),e._v(" "),a("p",[e._v("Note that using an asynchronous stream type with the "),a("code",[e._v("transform")]),e._v("\noption will cause undefined behavior in sync unpack streams.\n"),a("a",{attrs:{href:"http://npm.im/minipass",target:"_blank",rel:"noopener noreferrer"}},[e._v("MiniPass"),a("OutboundLink")],1),e._v("-based streams are designed for this\nuse case.")]),e._v(" "),e._m(75),e._v(" "),a("p",[e._v("A writable stream that parses a tar archive stream.  All the standard\nwritable stream stuff is supported.")]),e._v(" "),a("p",[e._v("If the archive is gzipped, then tar will detect this and unzip it.")]),e._v(" "),e._m(76),e._v(" "),e._m(77),e._v(" "),e._m(78),e._v(" "),e._m(79),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(80),e._v(" "),e._m(81),e._v(" "),a("p",[e._v("Stop all parsing activities.  This is called when there are zlib\nerrors.  It also emits a warning with the message and error provided.")]),e._v(" "),a("h3",{attrs:{id:"class-tar-readentry-extends-minipass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-readentry-extends-minipass","aria-hidden":"true"}},[e._v("#")]),e._v(" class tar.ReadEntry extends "),a("a",{attrs:{href:"http://npm.im/minipass",target:"_blank",rel:"noopener noreferrer"}},[e._v("MiniPass"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("A representation of an entry that is being read out of a tar archive.")]),e._v(" "),a("p",[e._v("It has the following fields:")]),e._v(" "),e._m(82),e._v(" "),e._m(83),e._v(" "),a("p",[e._v("Create a new ReadEntry object with the specified header, extended\nheader, and global extended header values.")]),e._v(" "),a("h3",{attrs:{id:"class-tar-writeentry-extends-minipass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-writeentry-extends-minipass","aria-hidden":"true"}},[e._v("#")]),e._v(" class tar.WriteEntry extends "),a("a",{attrs:{href:"http://npm.im/minipass",target:"_blank",rel:"noopener noreferrer"}},[e._v("MiniPass"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("A representation of an entry that is being written from the file\nsystem into a tar archive.")]),e._v(" "),a("p",[e._v("Emits data for the Header, and for the Pax Extended Header if one is\nrequired, as well as any body data.")]),e._v(" "),a("p",[e._v("Creating a WriteEntry for a directory does not also create\nWriteEntry objects for all of the directory contents.")]),e._v(" "),a("p",[e._v("It has the following fields:")]),e._v(" "),e._m(84),e._v(" "),e._m(85),e._v(" "),e._m(86),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(87),e._v(" "),e._m(88),e._v(" "),a("p",[e._v("If strict, emit an error with the provided message.")]),e._v(" "),e._m(89),e._v(" "),e._m(90),e._v(" "),a("p",[e._v("Synchronous version of tar.WriteEntry")]),e._v(" "),e._m(91),e._v(" "),a("p",[e._v("A version of tar.WriteEntry that gets its data from a tar.ReadEntry\ninstead of from the filesystem.")]),e._v(" "),e._m(92),e._v(" "),e._m(93),e._v(" "),a("p",[e._v("The following options are supported:")]),e._v(" "),e._m(94),e._v(" "),e._m(95),e._v(" "),a("p",[e._v("A class for reading and writing header blocks.")]),e._v(" "),a("p",[e._v("It has the following fields:")]),e._v(" "),e._m(96),e._v(" "),e._m(97),e._v(" "),e._m(98),e._v(" "),e._m(99),e._v(" "),a("p",[e._v("Decode the provided buffer starting at the specified offset.")]),e._v(" "),a("p",[e._v("Buffer length must be greater than 512 bytes.")]),e._v(" "),e._m(100),e._v(" "),a("p",[e._v("Set the fields in the data object.")]),e._v(" "),e._m(101),e._v(" "),a("p",[e._v("Encode the header fields into the buffer at the specified offset.")]),e._v(" "),e._m(102),e._v(" "),e._m(103),e._v(" "),a("p",[e._v("An object representing a set of key-value pairs in an Pax extended\nheader entry.")]),e._v(" "),a("p",[e._v("It has the following fields.  Where the same name is used, they have\nthe same semantics as the tar.Header field of the same name.")]),e._v(" "),e._m(104),e._v(" "),e._m(105),e._v(" "),e._m(106),e._v(" "),e._m(107),e._v(" "),e._m(108),e._v(" "),e._m(109),e._v(" "),a("p",[e._v("Return a string representing the body of the pax extended header\nentry.")]),e._v(" "),e._m(110),e._v(" "),e._m(111),e._v(" "),e._m(112),e._v(" "),a("p",[e._v("Return a new Pax object created by parsing the contents of the string\nprovided.")]),e._v(" "),e._m(113),e._v(" "),e._m(114),e._v(" "),e._m(115),e._v(" "),e._m(116),e._v(" "),a("p",[e._v("Get the human-readable name for a given alphanumeric code.")]),e._v(" "),e._m(117),e._v(" "),a("p",[e._v("Get the alphanumeric code for a given human-readable name.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"node-tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-tar","aria-hidden":"true"}},[this._v("#")]),this._v(" node-tar")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{href:"./benchmarks"}},[this._v("Fast")]),this._v(" and full-featured Tar for Node.js")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The API is designed to mimic the behavior of "),t("code",[this._v("tar(1)")]),this._v(" on unix systems.\nIf you are familiar with how tar works, most of this will hopefully be\nstraightforward for you.  If not, then hopefully this module can teach\nyou useful unix skills that may come in handy someday 😃")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"background"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#background","aria-hidden":"true"}},[this._v("#")]),this._v(" Background")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('A "tar file" or "tarball" is an archive of file system entries\n(directories, files, links, etc.)  The name comes from "tape archive".\nIf you run '),t("code",[this._v("man tar")]),this._v(" on almost any Unix command line, you'll learn\nquite a bit about what it can do, and its history.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("c")]),e._v(" Create an archive")]),e._v(" "),a("li",[a("code",[e._v("r")]),e._v(" Replace entries within an archive")]),e._v(" "),a("li",[a("code",[e._v("u")]),e._v(" Update entries within an archive (ie, replace if they're newer)")]),e._v(" "),a("li",[a("code",[e._v("t")]),e._v(" List out the contents of an archive")]),e._v(" "),a("li",[a("code",[e._v("x")]),e._v(" Extract an archive to disk")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"high-level-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#high-level-api","aria-hidden":"true"}},[this._v("#")]),this._v(" High-Level API")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("These 5 functions are the high-level API.  All of them have a\nsingle-character name (for unix nerds familiar with "),t("code",[this._v("tar(1)")]),this._v(") as well\nas a long name (for everyone else).")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[a("code",[e._v("options")]),e._v(" - An optional object specifying various options")]),e._v(" "),a("li",[a("code",[e._v("paths")]),e._v(" - An array of paths to add or extract")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" - Called when the command is completed, if async.  (If\nsync or no file specified, providing a callback throws a\n"),a("code",[e._v("TypeError")]),e._v(".)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If the command is sync (ie, if "),t("code",[this._v("options.sync=true")]),this._v("), then the\ncallback is not allowed, since the action will be completed immediately.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If a "),t("code",[this._v("file")]),this._v(" argument is specified, and the command is async, then a\n"),t("code",[this._v("Promise")]),this._v(" is returned.  In this case, if async, a callback may be\nprovided which is called when the command is completed.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("If a "),a("code",[e._v("file")]),e._v(" option is not specified, then a stream is returned.  For\n"),a("code",[e._v("create")]),e._v(", this is a readable stream of the generated archive.  For\n"),a("code",[e._v("list")]),e._v(" and "),a("code",[e._v("extract")]),e._v(" this is a writable stream that an archive should\nbe written into.  If a file is not specified, then a callback is not\nallowed, because you're already getting a stream to work with.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("replace")]),this._v(" and "),t("code",[this._v("update")]),this._v(" only work on existing archives, and so require\na "),t("code",[this._v("file")]),this._v(" argument.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Sync commands without a file argument return a stream that acts on its\ninput immediately in the same tick.  For readable streams, this means\nthat all of the data is immediately available by calling\n"),t("code",[this._v("stream.read()")]),this._v(".  For writable streams, it will be acted upon as soon\nas it is provided, but this can be at any time.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"warnings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#warnings","aria-hidden":"true"}},[this._v("#")]),this._v(" Warnings")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[a("strong",[e._v("Ignore them")]),e._v(" (default) Invalid entries won't be put in the\narchive, and invalid entries won't be unpacked.  This is usually\nfine, but can hide failures that you might care about.")]),e._v(" "),a("li",[a("strong",[e._v("Notice them")]),e._v("  Add an "),a("code",[e._v("onwarn")]),e._v(" function to the options, or listen\nto the "),a("code",[e._v("'warn'")]),e._v(" event on any tar stream.  The function will get\ncalled as "),a("code",[e._v("onwarn(message, data)")]),e._v(".  Handle as appropriate.")]),e._v(" "),a("li",[a("strong",[e._v("Explode them.")]),e._v("  Set "),a("code",[e._v("strict: true")]),e._v(" in the options object, and\n"),a("code",[e._v("warn")]),e._v(" messages will be emitted as "),a("code",[e._v("'error'")]),e._v(" events instead.  If\nthere's no "),a("code",[e._v("error")]),e._v(" handler, this causes the program to crash.  If\nused with a promise-returning/callback-taking method, then it'll\nsend the error to the promise/callback.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The API mimics the "),t("code",[this._v("tar(1)")]),this._v(" command line functionality, with aliases\nfor more human-readable option and function names.  The goal is that\nif you know how to use "),t("code",[this._v("tar(1)")]),this._v(" in Unix, then you know how to use\n"),t("code",[this._v("require('tar')")]),this._v(" in JavaScript.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("tar czf my-tarball.tgz files and folders")]),this._v(", you'd do:")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("gzip options"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'some'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'files'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'and'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'folders'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("_")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" tarball has been created "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("tar cz files and folders > my-tarball.tgz")]),this._v(", you'd do:")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// or tar.create")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("gzip options"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'some'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'files'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'and'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'folders'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createWriteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("tar xf my-tarball.tgz")]),this._v(" you'd do:")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// or tar.extract(")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("_")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" tarball has been dumped "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" cwd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("cat my-tarball.tgz | tar x -C some-dir --strip=1")]),this._v(":")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'some-dir'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// alias for cwd:'some-dir', also ok")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("tar tf my-tarball.tgz")]),this._v(", do this:")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("onentry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("entry")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v(" whatever "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" it "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To replicate "),t("code",[this._v("cat my-tarball.tgz | tar t")]),this._v(" do:")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'my-tarball.tgz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'entry'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("entry")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v(" whatever "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" it "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To do anything synchronous, add "),t("code",[this._v("sync: true")]),this._v(" to the options.  Note\nthat sync functions don't take a callback and don't return a promise.\nWhen the function returns, it's already done.  Sync methods without a\nfile argument return a sync stream, which flushes immediately.  But,\nof course, it still won't be done until you "),t("code",[this._v(".end()")]),this._v(" it.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("To filter entries, add "),a("code",[e._v("filter: <function>")]),e._v(" to the options.\nTar-creating methods call the filter with "),a("code",[e._v("filter(path, stat)")]),e._v(".\nTar-reading methods (including extraction) call the filter with\n"),a("code",[e._v("filter(path, entry)")]),e._v(".  The filter is called in the "),a("code",[e._v("this")]),e._v("-context of\nthe "),a("code",[e._v("Pack")]),e._v(" or "),a("code",[e._v("Unpack")]),e._v(" stream object.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The arguments list to "),t("code",[this._v("tar t")]),this._v(" and "),t("code",[this._v("tar x")]),this._v(" specify a list of filenames\nto extract or list, so they're equivalent to a filter that tests if\nthe file is in the list.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For those who "),t("em",[this._v("aren't")]),this._v(" fans of tar's single-character command names:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("tar.c === tar.create\ntar.r === tar.replace (appends to archive, file is required)\ntar.u === tar.update (appends if newer, file is required)\ntar.x === tar.extract\ntar.t === tar.list\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-c-options-filelist-callback-alias-tar-create"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-c-options-filelist-callback-alias-tar-create","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.c(options, fileList, callback) [alias: tar.create]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("fileList")]),this._v(" is an array of paths to add to the tarball.  Adding a\ndirectory also adds its children recursively.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("An entry in "),a("code",[e._v("fileList")]),e._v(" that starts with an "),a("code",[e._v("@")]),e._v(" symbol is a tar archive\nwhose entries will be added.  To add a file that starts with "),a("code",[e._v("@")]),e._v(",\nprepend it with "),a("code",[e._v("./")]),e._v(".")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("file")]),e._v(" Write the tarball archive to the specified filename.  If this\nis specified, then the callback will be fired when the file has been\nwritten, and a promise will be returned that resolves when the file\nis written.  If a filename is not specified, then a Readable Stream\nwill be returned which will emit the file data. [Alias: "),a("code",[e._v("f")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("sync")]),e._v(" Act synchronously.  If this is set, then any provided file\nwill be fully written after the call to "),a("code",[e._v("tar.c")]),e._v(".  If this is set,\nand a file is not provided, then the resulting stream will already\nhave the data ready to "),a("code",[e._v("read")]),e._v(" or "),a("code",[e._v("emit('data')")]),e._v(" as soon as you\nrequest it.")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for creating the archive.\nDefaults to "),a("code",[e._v("process.cwd()")]),e._v(".  [Alias: "),a("code",[e._v("C")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("prefix")]),e._v(" A path portion to prefix onto the entries in the archive.")]),e._v(" "),a("li",[a("code",[e._v("gzip")]),e._v(" Set to any truthy value to create a gzipped archive, or an\nobject with settings for "),a("code",[e._v("zlib.Gzip()")]),e._v(" [Alias: "),a("code",[e._v("z")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, stat)")]),e._v(" for each\nentry being added.  Return "),a("code",[e._v("true")]),e._v(" to add the entry to the archive,\nor "),a("code",[e._v("false")]),e._v(" to omit it.")]),e._v(" "),a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths. [Alias: "),a("code",[e._v("P")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("mode")]),e._v(" The mode to set on the created file archive")]),e._v(" "),a("li",[a("code",[e._v("noDirRecurse")]),e._v(" Do not recursively archive the contents of\ndirectories. [Alias: "),a("code",[e._v("n")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("follow")]),e._v(" Set to true to pack the targets of symbolic links.  Without\nthis option, symbolic links are archived as such. [Alias: "),a("code",[e._v("L")]),e._v(", "),a("code",[e._v("h")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("noPax")]),e._v(" Suppress pax extended headers.  Note that this means that\nlong paths and linkpaths will be truncated, and large or negative\nnumeric values may be interpreted incorrectly.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.\n[Alias: "),a("code",[e._v("m")]),e._v(", "),a("code",[e._v("no-mtime")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("mtime")]),e._v(" Set to a "),a("code",[e._v("Date")]),e._v(" object to force a specific "),a("code",[e._v("mtime")]),e._v(" for\neverything added to the archive.  Overridden by "),a("code",[e._v("noMtime")]),e._v(".")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("linkCache")]),e._v(" A Map object containing the device and inode value for\nany file whose nlink is > 1, to identify hard links.")]),e._v(" "),a("li",[a("code",[e._v("statCache")]),e._v(" A Map object that caches calls "),a("code",[e._v("lstat")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("readdirCache")]),e._v(" A Map object that caches calls to "),a("code",[e._v("readdir")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("jobs")]),e._v(" A number specifying how many concurrent jobs to run.\nDefaults to 4.")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-x-options-filelist-callback-alias-tar-extract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-x-options-filelist-callback-alias-tar-extract","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.x(options, fileList, callback) [alias: tar.extract]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("fileList")]),this._v(" is an array of paths to extract from the tarball.  If\nno paths are provided, then all the entries are extracted.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Most extraction errors will cause a "),t("code",[this._v("warn")]),this._v(" event to be emitted.  If\nthe "),t("code",[this._v("cwd")]),this._v(" is missing, or not a directory, then the extraction will\nfail completely.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("cwd")]),e._v(" Extract files relative to the specified directory.  Defaults\nto "),a("code",[e._v("process.cwd()")]),e._v(".  If provided, this must exist and must be a\ndirectory. [Alias: "),a("code",[e._v("C")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("file")]),e._v(" The archive file to extract.  If not specified, then a\nWritable stream is returned where the archive data should be\nwritten. [Alias: "),a("code",[e._v("f")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("sync")]),e._v(" Create files and directories synchronously.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, entry)")]),e._v(" for each\nentry being unpacked.  Return "),a("code",[e._v("true")]),e._v(" to unpack the entry from the\narchive, or "),a("code",[e._v("false")]),e._v(" to skip it.")]),e._v(" "),a("li",[a("code",[e._v("newer")]),e._v(" Set to true to keep the existing file on disk if it's newer\nthan the file in the archive. [Alias: "),a("code",[e._v("keep-newer")]),e._v(",\n"),a("code",[e._v("keep-newer-files")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("keep")]),e._v(" Do not overwrite existing files.  In particular, if a file\nappears more than once in an archive, later copies will not\noverwrite earlier copies. [Alias: "),a("code",[e._v("k")]),e._v(", "),a("code",[e._v("keep-existing")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths, paths containing "),a("code",[e._v("..")]),e._v(", and\nextracting through symbolic links.  By default, "),a("code",[e._v("/")]),e._v(" is stripped from\nabsolute paths, "),a("code",[e._v("..")]),e._v(" paths are not extracted, and any file whose\nlocation would be modified by a symbolic link is not extracted.\n[Alias: "),a("code",[e._v("P")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("unlink")]),e._v(" Unlink files before creating them.  Without this option,\ntar overwrites existing files, which preserves existing hardlinks.\nWith this option, existing hardlinks will be broken, as will any\nsymlink that would affect the location of an extracted file. [Alias:\n"),a("code",[e._v("U")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("strip")]),e._v(" Remove the specified number of leading path elements.\nPathnames with fewer elements will be silently skipped.  Note that\nthe pathname is edited after applying the filter, but before\nsecurity checks. [Alias: "),a("code",[e._v("strip-components")]),e._v(", "),a("code",[e._v("stripComponents")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("preserveOwner")]),e._v(" If true, tar will set the "),a("code",[e._v("uid")]),e._v(" and "),a("code",[e._v("gid")]),e._v(" of\nextracted entries to the "),a("code",[e._v("uid")]),e._v(" and "),a("code",[e._v("gid")]),e._v(" fields in the archive.\nThis defaults to true when run as root, and false otherwise.  If\nfalse, then files and directories will be set with the owner and\ngroup of the user running the process.  This is similar to "),a("code",[e._v("-p")]),e._v(" in\n"),a("code",[e._v("tar(1)")]),e._v(", but ACLs and other system-specific data is never unpacked\nin this implementation, and modes are set by default already.\n[Alias: "),a("code",[e._v("p")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("uid")]),e._v(" Set to a number to force ownership of all extracted files and\nfolders, and all implicitly created directories, to be owned by the\nspecified user id, regardless of the "),a("code",[e._v("uid")]),e._v(" field in the archive.\nCannot be used along with "),a("code",[e._v("preserveOwner")]),e._v(".  Requires also setting a\n"),a("code",[e._v("gid")]),e._v(" option.")]),e._v(" "),a("li",[a("code",[e._v("gid")]),e._v(" Set to a number to force ownership of all extracted files and\nfolders, and all implicitly created directories, to be owned by the\nspecified group id, regardless of the "),a("code",[e._v("gid")]),e._v(" field in the archive.\nCannot be used along with "),a("code",[e._v("preserveOwner")]),e._v(".  Requires also setting a\n"),a("code",[e._v("uid")]),e._v(" option.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" value for extracted\nentries. [Alias: "),a("code",[e._v("m")]),e._v(", "),a("code",[e._v("no-mtime")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("transform")]),e._v(" Provide a function that takes an "),a("code",[e._v("entry")]),e._v(" object, and\nreturns a stream, or any falsey value.  If a stream is provided,\nthen that stream's data will be written instead of the contents of\nthe archive entry.  If a falsey value is provided, then the entry is\nwritten to disk as normal.  (To exclude items from extraction, use\nthe "),a("code",[e._v("filter")]),e._v(" option described above.)")]),e._v(" "),a("li",[a("code",[e._v("onentry")]),e._v(" A function that gets called with "),a("code",[e._v("(entry)")]),e._v(" for each entry\nthat passes the filter.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")]),e._v(" "),a("li",[a("code",[e._v("umask")]),e._v(" Filter the modes of entries like "),a("code",[e._v("process.umask()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("dmode")]),e._v(" Default mode for directories")]),e._v(" "),a("li",[a("code",[e._v("fmode")]),e._v(" Default mode for files")]),e._v(" "),a("li",[a("code",[e._v("dirCache")]),e._v(" A Map object of which directories exist.")]),e._v(" "),a("li",[a("code",[e._v("maxMetaEntrySize")]),e._v(" The maximum size of meta entries that is\nsupported.  Defaults to 1 MB.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-t-options-filelist-callback-alias-tar-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-t-options-filelist-callback-alias-tar-list","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.t(options, fileList, callback) [alias: tar.list]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("fileList")]),this._v(" is an array of paths to list from the tarball.  If\nno paths are provided, then all the entries are listed.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Returns an event emitter that emits "),a("code",[e._v("entry")]),e._v(" events with\n"),a("code",[e._v("tar.ReadEntry")]),e._v(" objects.  However, they don't emit "),a("code",[e._v("'data'")]),e._v(" or "),a("code",[e._v("'end'")]),e._v("\nevents.  (If you want to get actual readable entries, use the\n"),a("code",[e._v("tar.Parse")]),e._v(" class instead.)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("cwd")]),e._v(" Extract files relative to the specified directory.  Defaults\nto "),a("code",[e._v("process.cwd()")]),e._v(". [Alias: "),a("code",[e._v("C")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("file")]),e._v(" The archive file to list.  If not specified, then a\nWritable stream is returned where the archive data should be\nwritten. [Alias: "),a("code",[e._v("f")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("sync")]),e._v(" Read the specified file synchronously.  (This has no effect\nwhen a file option isn't specified, because entries are emitted as\nfast as they are parsed from the stream anyway.)")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, entry)")]),e._v(" for each\nentry being listed.  Return "),a("code",[e._v("true")]),e._v(" to emit the entry from the\narchive, or "),a("code",[e._v("false")]),e._v(" to skip it.")]),e._v(" "),a("li",[a("code",[e._v("onentry")]),e._v(" A function that gets called with "),a("code",[e._v("(entry)")]),e._v(" for each entry\nthat passes the filter.  This is important for when both "),a("code",[e._v("file")]),e._v(" and\n"),a("code",[e._v("sync")]),e._v(" are set, because it will be called synchronously.")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")]),e._v(" "),a("li",[a("code",[e._v("noResume")]),e._v(" By default, "),a("code",[e._v("entry")]),e._v(" streams are resumed immediately after\nthe call to "),a("code",[e._v("onentry")]),e._v(".  Set "),a("code",[e._v("noResume: true")]),e._v(" to suppress this\nbehavior.  Note that by opting into this, the stream will never\ncomplete until the entry data is consumed.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-u-options-filelist-callback-alias-tar-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-u-options-filelist-callback-alias-tar-update","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.u(options, fileList, callback) [alias: tar.update]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("fileList")]),this._v(" is an array of paths to add to the tarball.  Adding a\ndirectory also adds its children recursively.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("An entry in "),a("code",[e._v("fileList")]),e._v(" that starts with an "),a("code",[e._v("@")]),e._v(" symbol is a tar archive\nwhose entries will be added.  To add a file that starts with "),a("code",[e._v("@")]),e._v(",\nprepend it with "),a("code",[e._v("./")]),e._v(".")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("file")]),e._v(" Required. Write the tarball archive to the specified\nfilename. [Alias: "),a("code",[e._v("f")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("sync")]),e._v(" Act synchronously.  If this is set, then any provided file\nwill be fully written after the call to "),a("code",[e._v("tar.c")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for adding entries to the\narchive.  Defaults to "),a("code",[e._v("process.cwd()")]),e._v(".  [Alias: "),a("code",[e._v("C")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("prefix")]),e._v(" A path portion to prefix onto the entries in the archive.")]),e._v(" "),a("li",[a("code",[e._v("gzip")]),e._v(" Set to any truthy value to create a gzipped archive, or an\nobject with settings for "),a("code",[e._v("zlib.Gzip()")]),e._v(" [Alias: "),a("code",[e._v("z")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, stat)")]),e._v(" for each\nentry being added.  Return "),a("code",[e._v("true")]),e._v(" to add the entry to the archive,\nor "),a("code",[e._v("false")]),e._v(" to omit it.")]),e._v(" "),a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths. [Alias: "),a("code",[e._v("P")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")]),e._v(" "),a("li",[a("code",[e._v("noDirRecurse")]),e._v(" Do not recursively archive the contents of\ndirectories. [Alias: "),a("code",[e._v("n")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("follow")]),e._v(" Set to true to pack the targets of symbolic links.  Without\nthis option, symbolic links are archived as such. [Alias: "),a("code",[e._v("L")]),e._v(", "),a("code",[e._v("h")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("noPax")]),e._v(" Suppress pax extended headers.  Note that this means that\nlong paths and linkpaths will be truncated, and large or negative\nnumeric values may be interpreted incorrectly.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.\n[Alias: "),a("code",[e._v("m")]),e._v(", "),a("code",[e._v("no-mtime")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("mtime")]),e._v(" Set to a "),a("code",[e._v("Date")]),e._v(" object to force a specific "),a("code",[e._v("mtime")]),e._v(" for\neverything added to the archive.  Overridden by "),a("code",[e._v("noMtime")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-r-options-filelist-callback-alias-tar-replace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-r-options-filelist-callback-alias-tar-replace","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.r(options, fileList, callback) [alias: tar.replace]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("fileList")]),this._v(" is an array of paths to add to the tarball.  Adding a\ndirectory also adds its children recursively.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("An entry in "),a("code",[e._v("fileList")]),e._v(" that starts with an "),a("code",[e._v("@")]),e._v(" symbol is a tar archive\nwhose entries will be added.  To add a file that starts with "),a("code",[e._v("@")]),e._v(",\nprepend it with "),a("code",[e._v("./")]),e._v(".")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("file")]),e._v(" Required. Write the tarball archive to the specified\nfilename. [Alias: "),a("code",[e._v("f")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("sync")]),e._v(" Act synchronously.  If this is set, then any provided file\nwill be fully written after the call to "),a("code",[e._v("tar.c")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for adding entries to the\narchive.  Defaults to "),a("code",[e._v("process.cwd()")]),e._v(".  [Alias: "),a("code",[e._v("C")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("prefix")]),e._v(" A path portion to prefix onto the entries in the archive.")]),e._v(" "),a("li",[a("code",[e._v("gzip")]),e._v(" Set to any truthy value to create a gzipped archive, or an\nobject with settings for "),a("code",[e._v("zlib.Gzip()")]),e._v(" [Alias: "),a("code",[e._v("z")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, stat)")]),e._v(" for each\nentry being added.  Return "),a("code",[e._v("true")]),e._v(" to add the entry to the archive,\nor "),a("code",[e._v("false")]),e._v(" to omit it.")]),e._v(" "),a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths. [Alias: "),a("code",[e._v("P")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")]),e._v(" "),a("li",[a("code",[e._v("noDirRecurse")]),e._v(" Do not recursively archive the contents of\ndirectories. [Alias: "),a("code",[e._v("n")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("follow")]),e._v(" Set to true to pack the targets of symbolic links.  Without\nthis option, symbolic links are archived as such. [Alias: "),a("code",[e._v("L")]),e._v(", "),a("code",[e._v("h")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("noPax")]),e._v(" Suppress pax extended headers.  Note that this means that\nlong paths and linkpaths will be truncated, and large or negative\nnumeric values may be interpreted incorrectly.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.\n[Alias: "),a("code",[e._v("m")]),e._v(", "),a("code",[e._v("no-mtime")]),e._v("]")]),e._v(" "),a("li",[a("code",[e._v("mtime")]),e._v(" Set to a "),a("code",[e._v("Date")]),e._v(" object to force a specific "),a("code",[e._v("mtime")]),e._v(" for\neverything added to the archive.  Overridden by "),a("code",[e._v("noMtime")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"low-level-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#low-level-api","aria-hidden":"true"}},[this._v("#")]),this._v(" Low-Level API")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-pack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-pack","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Pack")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Has all the standard readable stream interface stuff.  "),a("code",[e._v("'data'")]),e._v(" and\n"),a("code",[e._v("'end'")]),e._v(" events, "),a("code",[e._v("read()")]),e._v(" method, "),a("code",[e._v("pause()")]),e._v(" and "),a("code",[e._v("resume()")]),e._v(", etc.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-options","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(options)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for creating the archive.\nDefaults to "),a("code",[e._v("process.cwd()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("prefix")]),e._v(" A path portion to prefix onto the entries in the archive.")]),e._v(" "),a("li",[a("code",[e._v("gzip")]),e._v(" Set to any truthy value to create a gzipped archive, or an\nobject with settings for "),a("code",[e._v("zlib.Gzip()")])]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, stat)")]),e._v(" for each\nentry being added.  Return "),a("code",[e._v("true")]),e._v(" to add the entry to the archive,\nor "),a("code",[e._v("false")]),e._v(" to omit it.")]),e._v(" "),a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths.")]),e._v(" "),a("li",[a("code",[e._v("linkCache")]),e._v(" A Map object containing the device and inode value for\nany file whose nlink is > 1, to identify hard links.")]),e._v(" "),a("li",[a("code",[e._v("statCache")]),e._v(" A Map object that caches calls "),a("code",[e._v("lstat")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("readdirCache")]),e._v(" A Map object that caches calls to "),a("code",[e._v("readdir")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("jobs")]),e._v(" A number specifying how many concurrent jobs to run.\nDefaults to 4.")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 16 MB.")]),e._v(" "),a("li",[a("code",[e._v("noDirRecurse")]),e._v(" Do not recursively archive the contents of\ndirectories.")]),e._v(" "),a("li",[a("code",[e._v("follow")]),e._v(" Set to true to pack the targets of symbolic links.  Without\nthis option, symbolic links are archived as such.")]),e._v(" "),a("li",[a("code",[e._v("noPax")]),e._v(" Suppress pax extended headers.  Note that this means that\nlong paths and linkpaths will be truncated, and large or negative\nnumeric values may be interpreted incorrectly.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.")]),e._v(" "),a("li",[a("code",[e._v("mtime")]),e._v(" Set to a "),a("code",[e._v("Date")]),e._v(" object to force a specific "),a("code",[e._v("mtime")]),e._v(" for\neverything added to the archive.  Overridden by "),a("code",[e._v("noMtime")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"add-path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-path","aria-hidden":"true"}},[this._v("#")]),this._v(" add(path)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"write-path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#write-path","aria-hidden":"true"}},[this._v("#")]),this._v(" write(path)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"end"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#end","aria-hidden":"true"}},[this._v("#")]),this._v(" end()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-pack-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-pack-sync","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Pack.Sync")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Synchronous version of "),t("code",[this._v("tar.Pack")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-unpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-unpack","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Unpack")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("All the normal writable stream stuff is supported.  "),t("code",[this._v("write()")]),this._v(" and\n"),t("code",[this._v("end()")]),this._v(" methods, "),t("code",[this._v("'drain'")]),this._v(" events, etc.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("'close'")]),this._v(" is emitted when it's done writing stuff to the file system.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Most unpack errors will cause a "),t("code",[this._v("warn")]),this._v(" event to be emitted.  If the\n"),t("code",[this._v("cwd")]),this._v(" is missing, or not a directory, then an error will be emitted.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-options-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-options-2","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(options)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("cwd")]),e._v(" Extract files relative to the specified directory.  Defaults\nto "),a("code",[e._v("process.cwd()")]),e._v(".  If provided, this must exist and must be a\ndirectory.")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, entry)")]),e._v(" for each\nentry being unpacked.  Return "),a("code",[e._v("true")]),e._v(" to unpack the entry from the\narchive, or "),a("code",[e._v("false")]),e._v(" to skip it.")]),e._v(" "),a("li",[a("code",[e._v("newer")]),e._v(" Set to true to keep the existing file on disk if it's newer\nthan the file in the archive.")]),e._v(" "),a("li",[a("code",[e._v("keep")]),e._v(" Do not overwrite existing files.  In particular, if a file\nappears more than once in an archive, later copies will not\noverwrite earlier copies.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths, paths containing "),a("code",[e._v("..")]),e._v(", and\nextracting through symbolic links.  By default, "),a("code",[e._v("/")]),e._v(" is stripped from\nabsolute paths, "),a("code",[e._v("..")]),e._v(" paths are not extracted, and any file whose\nlocation would be modified by a symbolic link is not extracted.")]),e._v(" "),a("li",[a("code",[e._v("unlink")]),e._v(" Unlink files before creating them.  Without this option,\ntar overwrites existing files, which preserves existing hardlinks.\nWith this option, existing hardlinks will be broken, as will any\nsymlink that would affect the location of an extracted file.")]),e._v(" "),a("li",[a("code",[e._v("strip")]),e._v(" Remove the specified number of leading path elements.\nPathnames with fewer elements will be silently skipped.  Note that\nthe pathname is edited after applying the filter, but before\nsecurity checks.")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("umask")]),e._v(" Filter the modes of entries like "),a("code",[e._v("process.umask()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("dmode")]),e._v(" Default mode for directories")]),e._v(" "),a("li",[a("code",[e._v("fmode")]),e._v(" Default mode for files")]),e._v(" "),a("li",[a("code",[e._v("dirCache")]),e._v(" A Map object of which directories exist.")]),e._v(" "),a("li",[a("code",[e._v("maxMetaEntrySize")]),e._v(" The maximum size of meta entries that is\nsupported.  Defaults to 1 MB.")]),e._v(" "),a("li",[a("code",[e._v("preserveOwner")]),e._v(" If true, tar will set the "),a("code",[e._v("uid")]),e._v(" and "),a("code",[e._v("gid")]),e._v(" of\nextracted entries to the "),a("code",[e._v("uid")]),e._v(" and "),a("code",[e._v("gid")]),e._v(" fields in the archive.\nThis defaults to true when run as root, and false otherwise.  If\nfalse, then files and directories will be set with the owner and\ngroup of the user running the process.  This is similar to "),a("code",[e._v("-p")]),e._v(" in\n"),a("code",[e._v("tar(1)")]),e._v(", but ACLs and other system-specific data is never unpacked\nin this implementation, and modes are set by default already.")]),e._v(" "),a("li",[a("code",[e._v("win32")]),e._v(" True if on a windows platform.  Causes behavior where\nfilenames containing "),a("code",[e._v("<|>?")]),e._v(" chars are converted to\nwindows-compatible values while being unpacked.")]),e._v(" "),a("li",[a("code",[e._v("uid")]),e._v(" Set to a number to force ownership of all extracted files and\nfolders, and all implicitly created directories, to be owned by the\nspecified user id, regardless of the "),a("code",[e._v("uid")]),e._v(" field in the archive.\nCannot be used along with "),a("code",[e._v("preserveOwner")]),e._v(".  Requires also setting a\n"),a("code",[e._v("gid")]),e._v(" option.")]),e._v(" "),a("li",[a("code",[e._v("gid")]),e._v(" Set to a number to force ownership of all extracted files and\nfolders, and all implicitly created directories, to be owned by the\nspecified group id, regardless of the "),a("code",[e._v("gid")]),e._v(" field in the archive.\nCannot be used along with "),a("code",[e._v("preserveOwner")]),e._v(".  Requires also setting a\n"),a("code",[e._v("uid")]),e._v(" option.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" value for extracted\nentries.")]),e._v(" "),a("li",[a("code",[e._v("transform")]),e._v(" Provide a function that takes an "),a("code",[e._v("entry")]),e._v(" object, and\nreturns a stream, or any falsey value.  If a stream is provided,\nthen that stream's data will be written instead of the contents of\nthe archive entry.  If a falsey value is provided, then the entry is\nwritten to disk as normal.  (To exclude items from extraction, use\nthe "),a("code",[e._v("filter")]),e._v(" option described above.)")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("onentry")]),e._v(" A function that gets called with "),a("code",[e._v("(entry)")]),e._v(" for each entry\nthat passes the filter.")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-unpack-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-unpack-sync","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Unpack.Sync")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Synchronous version of "),t("code",[this._v("tar.Unpack")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-parse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-parse","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Parse")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Emits "),t("code",[this._v("'entry'")]),this._v(" events with "),t("code",[this._v("tar.ReadEntry")]),this._v(" objects, which are\nthemselves readable streams that you can pipe wherever.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Each "),a("code",[e._v("entry")]),e._v(" will not emit until the one before it is flushed through,\nso make sure to either consume the data (with "),a("code",[e._v("on('data', ...)")]),e._v(" or\n"),a("code",[e._v(".pipe(...)")]),e._v(") or throw it away with "),a("code",[e._v(".resume()")]),e._v(" to keep the stream\nflowing.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-options-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-options-3","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(options)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Returns an event emitter that emits "),t("code",[this._v("entry")]),this._v(" events with\n"),t("code",[this._v("tar.ReadEntry")]),this._v(" objects.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("filter")]),e._v(" A function that gets called with "),a("code",[e._v("(path, entry)")]),e._v(" for each\nentry being listed.  Return "),a("code",[e._v("true")]),e._v(" to emit the entry from the\narchive, or "),a("code",[e._v("false")]),e._v(" to skip it.")]),e._v(" "),a("li",[a("code",[e._v("onentry")]),e._v(" A function that gets called with "),a("code",[e._v("(entry)")]),e._v(" for each entry\nthat passes the filter.")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"abort-message-error"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abort-message-error","aria-hidden":"true"}},[this._v("#")]),this._v(" abort(message, error)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("extended")]),e._v(" The extended metadata object provided to the constructor.")]),e._v(" "),a("li",[a("code",[e._v("globalExtended")]),e._v(" The global extended metadata object provided to the\nconstructor.")]),e._v(" "),a("li",[a("code",[e._v("remain")]),e._v(" The number of bytes remaining to be written into the\nstream.")]),e._v(" "),a("li",[a("code",[e._v("blockRemain")]),e._v(" The number of 512-byte blocks remaining to be written\ninto the stream.")]),e._v(" "),a("li",[a("code",[e._v("ignore")]),e._v(" Whether this entry should be ignored.")]),e._v(" "),a("li",[a("code",[e._v("meta")]),e._v(" True if this represents metadata about the next entry, false\nif it represents a filesystem object.")]),e._v(" "),a("li",[e._v("All the fields from the header, extended header, and global extended\nheader are added to the ReadEntry object.  So it has "),a("code",[e._v("path")]),e._v(", "),a("code",[e._v("type")]),e._v(",\n"),a("code",[e._v("size,")]),e._v("mode`, and so on.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-header-extended-globalextended"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-header-extended-globalextended","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(header, extended, globalExtended)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("path")]),e._v(" The path field that will be written to the archive.  By\ndefault, this is also the path from the cwd to the file system\nobject.")]),e._v(" "),a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("myuid")]),e._v(" If supported, the uid of the user running the current\nprocess.")]),e._v(" "),a("li",[a("code",[e._v("myuser")]),e._v(" The "),a("code",[e._v("env.USER")]),e._v(" string if set, or "),a("code",[e._v("''")]),e._v(".  Set as the entry\n"),a("code",[e._v("uname")]),e._v(" field if the file's "),a("code",[e._v("uid")]),e._v(" matches "),a("code",[e._v("this.myuid")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 1 MB.")]),e._v(" "),a("li",[a("code",[e._v("linkCache")]),e._v(" A Map object containing the device and inode value for\nany file whose nlink is > 1, to identify hard links.")]),e._v(" "),a("li",[a("code",[e._v("statCache")]),e._v(" A Map object that caches calls "),a("code",[e._v("lstat")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for creating the archive.\nDefaults to "),a("code",[e._v("process.cwd()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("absolute")]),e._v(" The absolute path to the entry on the filesystem.  By\ndefault, this is "),a("code",[e._v("path.resolve(this.cwd, this.path)")]),e._v(", but it can be\noverridden explicitly.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("win32")]),e._v(" True if on a windows platform.  Causes behavior where paths\nreplace "),a("code",[e._v("\\")]),e._v(" with "),a("code",[e._v("/")]),e._v(" and filenames containing the windows-compatible\nforms of "),a("code",[e._v("<|>?:")]),e._v(" characters are converted to actual "),a("code",[e._v("<|>?:")]),e._v(" characters\nin the archive.")]),e._v(" "),a("li",[a("code",[e._v("noPax")]),e._v(" Suppress pax extended headers.  Note that this means that\nlong paths and linkpaths will be truncated, and large or negative\nnumeric values may be interpreted incorrectly.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-path-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-path-options","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(path, options)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("path")]),this._v(" is the path of the entry as it is written in the archive.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("maxReadSize")]),e._v(" The maximum buffer size for "),a("code",[e._v("fs.read()")]),e._v(" operations.\nDefaults to 1 MB.")]),e._v(" "),a("li",[a("code",[e._v("linkCache")]),e._v(" A Map object containing the device and inode value for\nany file whose nlink is > 1, to identify hard links.")]),e._v(" "),a("li",[a("code",[e._v("statCache")]),e._v(" A Map object that caches calls "),a("code",[e._v("lstat")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths.")]),e._v(" "),a("li",[a("code",[e._v("cwd")]),e._v(" The current working directory for creating the archive.\nDefaults to "),a("code",[e._v("process.cwd()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("absolute")]),e._v(" The absolute path to the entry on the filesystem.  By\ndefault, this is "),a("code",[e._v("path.resolve(this.cwd, this.path)")]),e._v(", but it can be\noverridden explicitly.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("win32")]),e._v(" True if on a windows platform.  Causes behavior where paths\nreplace "),a("code",[e._v("\\")]),e._v(" with "),a("code",[e._v("/")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.")]),e._v(" "),a("li",[a("code",[e._v("umask")]),e._v(" Set to restrict the modes on the entries in the archive,\nsomewhat like how umask works on file creation.  Defaults to\n"),a("code",[e._v("process.umask()")]),e._v(" on unix systems, or "),a("code",[e._v("0o22")]),e._v(" on Windows.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"warn-message-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#warn-message-data","aria-hidden":"true"}},[this._v("#")]),this._v(" warn(message, data)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Othewise, emit a "),t("code",[this._v("'warn'")]),this._v(" event with the provided message and data.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-writeentry-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-writeentry-sync","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.WriteEntry.Sync")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-writeentry-tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-writeentry-tar","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.WriteEntry.Tar")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-readentry-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-readentry-options","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(readEntry, options)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("readEntry")]),this._v(" is the entry being read out of another archive.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("portable")]),e._v(" Omit metadata that is system-specific: "),a("code",[e._v("ctime")]),e._v(", "),a("code",[e._v("atime")]),e._v(",\n"),a("code",[e._v("uid")]),e._v(", "),a("code",[e._v("gid")]),e._v(", "),a("code",[e._v("uname")]),e._v(", "),a("code",[e._v("gname")]),e._v(", "),a("code",[e._v("dev")]),e._v(", "),a("code",[e._v("ino")]),e._v(", and "),a("code",[e._v("nlink")]),e._v(".  Note\nthat "),a("code",[e._v("mtime")]),e._v(" is still included, because this is necessary other\ntime-based operations.")]),e._v(" "),a("li",[a("code",[e._v("preservePaths")]),e._v(" Allow absolute paths.  By default, "),a("code",[e._v("/")]),e._v(" is stripped\nfrom absolute paths.")]),e._v(" "),a("li",[a("code",[e._v("strict")]),e._v(" Treat warnings as crash-worthy errors.  Default false.")]),e._v(" "),a("li",[a("code",[e._v("onwarn")]),e._v(" A function that will get called with "),a("code",[e._v("(message, data)")]),e._v(" for\nany warnings encountered.")]),e._v(" "),a("li",[a("code",[e._v("noMtime")]),e._v(" Set to true to omit writing "),a("code",[e._v("mtime")]),e._v(" values for entries.\nNote that this prevents using other mtime-based features like\n"),a("code",[e._v("tar.update")]),e._v(" or the "),a("code",[e._v("keepNewer")]),e._v(" option with the resulting tar archive.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-header"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-header","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Header")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("nullBlock")]),e._v(" True if decoding a block which is entirely composed of\n"),a("code",[e._v("0x00")]),e._v(" null bytes.  (Useful because tar files are terminated by\nat least 2 null blocks.)")]),e._v(" "),a("li",[a("code",[e._v("cksumValid")]),e._v(" True if the checksum in the header is valid, false\notherwise.")]),e._v(" "),a("li",[a("code",[e._v("needPax")]),e._v(" True if the values, as encoded, will require a Pax\nextended header.")]),e._v(" "),a("li",[a("code",[e._v("path")]),e._v(" The path of the entry.")]),e._v(" "),a("li",[a("code",[e._v("mode")]),e._v(" The 4 lowest-order octal digits of the file mode.  That is,\nread/write/execute permissions for world, group, and owner, and the\nsetuid, setgid, and sticky bits.")]),e._v(" "),a("li",[a("code",[e._v("uid")]),e._v(" Numeric user id of the file owner")]),e._v(" "),a("li",[a("code",[e._v("gid")]),e._v(" Numeric group id of the file owner")]),e._v(" "),a("li",[a("code",[e._v("size")]),e._v(" Size of the file in bytes")]),e._v(" "),a("li",[a("code",[e._v("mtime")]),e._v(" Modified time of the file")]),e._v(" "),a("li",[a("code",[e._v("cksum")]),e._v(" The checksum of the header.  This is generated by adding all\nthe bytes of the header block, treating the checksum field itself as\nall ascii space characters (that is, "),a("code",[e._v("0x20")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("type")]),e._v(" The human-readable name of the type of entry this represents,\nor the alphanumeric key if unknown.")]),e._v(" "),a("li",[a("code",[e._v("typeKey")]),e._v(" The alphanumeric key for the type of entry this header\nrepresents.")]),e._v(" "),a("li",[a("code",[e._v("linkpath")]),e._v(" The target of Link and SymbolicLink entries.")]),e._v(" "),a("li",[a("code",[e._v("uname")]),e._v(" Human-readable user name of the file owner")]),e._v(" "),a("li",[a("code",[e._v("gname")]),e._v(" Human-readable group name of the file owner")]),e._v(" "),a("li",[a("code",[e._v("devmaj")]),e._v(" The major portion of the device number.  Always "),a("code",[e._v("0")]),e._v(" for\nfiles, directories, and links.")]),e._v(" "),a("li",[a("code",[e._v("devmin")]),e._v(" The minor portion of the device number.  Always "),a("code",[e._v("0")]),e._v(" for\nfiles, directories, and links.")]),e._v(" "),a("li",[a("code",[e._v("atime")]),e._v(" File access time.")]),e._v(" "),a("li",[a("code",[e._v("ctime")]),e._v(" File change time.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-data-offset-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-data-offset-0","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(data, [offset=0])")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("data")]),this._v(" is optional.  It is either a Buffer that should be interpreted\nas a tar Header starting at the specified offset and continuing for\n512 bytes, or a data object of keys and values to set on the header\nobject, and eventually encode as a tar Header.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"decode-block-offset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decode-block-offset","aria-hidden":"true"}},[this._v("#")]),this._v(" decode(block, offset)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"set-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-data","aria-hidden":"true"}},[this._v("#")]),this._v(" set(data)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"encode-buffer-offset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#encode-buffer-offset","aria-hidden":"true"}},[this._v("#")]),this._v(" encode(buffer, offset)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Returns "),t("code",[this._v("this.needPax")]),this._v(" to indicate whether a Pax Extended Header is\nrequired to properly encode the specified data.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"class-tar-pax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-tar-pax","aria-hidden":"true"}},[this._v("#")]),this._v(" class tar.Pax")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("code",[e._v("global")]),e._v(" True if this represents a global extended header, or false\nif it is for a single entry.")]),e._v(" "),a("li",[a("code",[e._v("atime")])]),e._v(" "),a("li",[a("code",[e._v("charset")])]),e._v(" "),a("li",[a("code",[e._v("comment")])]),e._v(" "),a("li",[a("code",[e._v("ctime")])]),e._v(" "),a("li",[a("code",[e._v("gid")])]),e._v(" "),a("li",[a("code",[e._v("gname")])]),e._v(" "),a("li",[a("code",[e._v("linkpath")])]),e._v(" "),a("li",[a("code",[e._v("mtime")])]),e._v(" "),a("li",[a("code",[e._v("path")])]),e._v(" "),a("li",[a("code",[e._v("size")])]),e._v(" "),a("li",[a("code",[e._v("uid")])]),e._v(" "),a("li",[a("code",[e._v("uname")])]),e._v(" "),a("li",[a("code",[e._v("dev")])]),e._v(" "),a("li",[a("code",[e._v("ino")])]),e._v(" "),a("li",[a("code",[e._v("nlink")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"constructor-object-global"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-object-global","aria-hidden":"true"}},[this._v("#")]),this._v(" constructor(object, global)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Set the fields set in the object.  "),t("code",[this._v("global")]),this._v(" is a boolean that defaults\nto false.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"encode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#encode","aria-hidden":"true"}},[this._v("#")]),this._v(" encode()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Return a Buffer containing the header and body for the Pax extended\nheader entry, or "),t("code",[this._v("null")]),this._v(" if there is nothing to encode.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"encodebody"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#encodebody","aria-hidden":"true"}},[this._v("#")]),this._v(" encodeBody()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"encodefield-fieldname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#encodefield-fieldname","aria-hidden":"true"}},[this._v("#")]),this._v(" encodeField(fieldName)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Return a string representing the key/value encoding for the specified\nfieldName, or "),t("code",[this._v("''")]),this._v(" if the field is unset.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-pax-parse-string-extended-global"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-pax-parse-string-extended-global","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.Pax.parse(string, extended, global)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If the "),t("code",[this._v("extended")]),this._v(" object is set, then also add the fields from that\nobject.  (This is necessary because multiple metadata entries can\noccur in sequence.)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tar-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-types","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.types")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("A translation table for the "),t("code",[this._v("type")]),this._v(" field in tar headers.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"tar-types-name-get-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-types-name-get-code","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.types.name.get(code)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"tar-types-code-get-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-types-code-get-name","aria-hidden":"true"}},[this._v("#")]),this._v(" tar.types.code.get(name)")])}],!1,null,null,null);t.default=n.exports}}]);