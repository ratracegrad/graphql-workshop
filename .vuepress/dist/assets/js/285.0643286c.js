(window.webpackJsonp=window.webpackJsonp||[]).push([[285],{451:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[s("a",{attrs:{href:"https://npmjs.org/package/mime-db",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badgen.net/npm/v/mime-db",alt:"NPM Version"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://npmjs.org/package/mime-db",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badgen.net/npm/dm/mime-db",alt:"NPM Downloads"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://nodejs.org/en/download",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badgen.net/npm/node/mime-db",alt:"Node.js Version"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://travis-ci.org/jshttp/mime-db",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badgen.net/travis/jshttp/mime-db/master",alt:"Build Status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://coveralls.io/r/jshttp/mime-db?branch=master",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badgen.net/coveralls/c/github/jshttp/mime-db/master",alt:"Coverage Status"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("This is a database of all mime types.\nIt consists of a single, public JSON file and does not include any logic,\nallowing it to remain as un-opinionated as possible with an API.\nIt aggregates data from the following sources:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),s("p",[t._v("If you're crazy enough to use this in the browser, you can just grab the\nJSON file using "),s("a",{attrs:{href:"https://rawgit.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RawGit"),s("OutboundLink")],1),t._v(". It is recommended to replace\n"),s("code",[t._v("master")]),t._v(" with "),s("a",{attrs:{href:"https://github.com/jshttp/mime-db/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("a release tag"),s("OutboundLink")],1),t._v(" as the\nJSON format may change in the future.")]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),s("p",[t._v("The JSON file is a map lookup for lowercased mime types.\nEach mime type has the following properties:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".source")]),t._v(" - where the mime type is defined.\nIf not set, it's probably a custom media type.\n"),s("ul",[s("li",[s("code",[t._v("apache")]),t._v(" - "),s("a",{attrs:{href:"http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache common media types"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("code",[t._v("iana")]),t._v(" - "),s("a",{attrs:{href:"http://www.iana.org/assignments/media-types/media-types.xhtml",target:"_blank",rel:"noopener noreferrer"}},[t._v("IANA-defined media types"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("code",[t._v("nginx")]),t._v(" - "),s("a",{attrs:{href:"http://hg.nginx.org/nginx/raw-file/default/conf/mime.types",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx media types"),s("OutboundLink")],1)])])]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11)]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),s("ul",[t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),s("li",[s("code",[t._v("sources")]),t._v(" - include an array of URLs of where the MIME type and the associated\nextensions are sourced from. This needs to be a "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Primary_source",target:"_blank",rel:"noopener noreferrer"}},[t._v("primary source"),s("OutboundLink")],1),t._v(";\nlinks to type aggregating sites and Wikipedia are "),s("em",[t._v("not acceptable")]),t._v(".")])]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("The best way to get new media types included in this library is to register\nthem with the IANA. The community registration procedure is outlined in\n"),s("a",{attrs:{href:"http://tools.ietf.org/html/rfc6838#section-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 6838 section 5"),s("OutboundLink")],1),t._v(". Types\nregistered with the IANA are automatically pulled into this library.")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"mime-db"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mime-db","aria-hidden":"true"}},[this._v("#")]),this._v(" mime-db")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("http://www.iana.org/assignments/media-types/media-types.xhtml")]),this._v(" "),e("li",[this._v("http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types")]),this._v(" "),e("li",[this._v("http://hg.nginx.org/nginx/raw-file/default/conf/mime.types")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" mime-db\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"database-download"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#database-download","aria-hidden":"true"}},[this._v("#")]),this._v(" Database Download")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("https://cdn.rawgit.com/jshttp/mime-db/master/db.json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Usage")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mime-db'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// grab data on .js files")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/javascript'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"data-structure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" Data Structure")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v(".extensions[]")]),this._v(" - known extensions associated with this mime type.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v(".compressible")]),this._v(" - whether a file of this type can be gzipped.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v(".charset")]),this._v(" - the default charset associated with this type, if any.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If unknown, every property could be "),e("code",[this._v("undefined")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"contributing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contributing","aria-hidden":"true"}},[this._v("#")]),this._v(" Contributing")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To edit the database, only make PRs against "),e("code",[this._v("src/custom.json")]),this._v(" or\n"),e("code",[this._v("src/custom-suffix.json")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The "),e("code",[this._v("src/custom.json")]),this._v(" file is a JSON object with the MIME type as the keys\nand the values being an object with the following keys:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("compressible")]),this._v(" - leave out if you don't know, otherwise "),e("code",[this._v("true")]),this._v("/"),e("code",[this._v("false")]),this._v(" to\nindicate whether the data represented by the type is typically compressible.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("extensions")]),this._v(" - include an array of file extensions that are associated with\nthe type.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("notes")]),this._v(" - human-readable notes about the type, typically what the type is.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To update the build, run "),e("code",[this._v("npm run build")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"adding-custom-media-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-custom-media-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding Custom Media Types")])}],!1,null,null,null);e.default=r.exports}}]);