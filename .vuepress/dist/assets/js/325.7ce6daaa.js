(window.webpackJsonp=window.webpackJsonp||[]).push([[325],{491:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("A handle scope can be thought of as a container for any number of handles. When you've finished with your handles, instead of deleting each one individually you can simply delete their scope.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),a("p",[e._v("Also see the V8 Embedders Guide section on "),a("a",{attrs:{href:"https://github.com/v8/v8/wiki/Embedder%27s%20Guide#handles-and-garbage-collection",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handles and Garbage Collection"),a("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("A simple wrapper around "),a("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.11/d3/d95/classv8_1_1_handle_scope.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("v8::HandleScope")]),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Definition:")]),e._v(" "),e._m(6),e._m(7),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),e._m(8),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),a("p",[e._v("Definition:")]),e._v(" "),e._m(12),e._m(13),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),e._m(14)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"scopes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scopes","aria-hidden":"true"}},[this._v("#")]),this._v(" Scopes")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("A "),t("em",[this._v("local handle")]),this._v(" is a pointer to an object. All V8 objects are accessed using handles, they are necessary because of the way the V8 garbage collector works.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The creation of "),t("code",[this._v("HandleScope")]),this._v(" objects is different across the supported versions of V8. Therefore, NAN provides its own implementations that can be used safely across these.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"#api_nan_handle_scope"}},[t("b",[t("code",[this._v("Nan::HandleScope")])])])]),this._v(" "),t("li",[t("a",{attrs:{href:"#api_nan_escapable_handle_scope"}},[t("b",[t("code",[this._v("Nan::EscapableHandleScope")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{name:"api_nan_handle_scope"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"nan-handlescope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nan-handlescope","aria-hidden":"true"}},[this._v("#")]),this._v(" Nan::HandleScope")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("class Nan::HandleScope {\n public:\n  Nan::HandleScope();\n  static int NumberOfHandles();\n};\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Allocate a new "),t("code",[this._v("Nan::HandleScope")]),this._v(" whenever you are creating new V8 JavaScript objects. Note that an implicit "),t("code",[this._v("HandleScope")]),this._v(" is created for you on JavaScript-accessible methods so you do not need to insert one yourself.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// new object is created, it needs a new scope:\nvoid Pointless() {\n  Nan::HandleScope scope;\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n}\n\n// JavaScript-accessible method already has a HandleScope\nNAN_METHOD(Pointless2) {\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{name:"api_nan_escapable_handle_scope"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"nan-escapablehandlescope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nan-escapablehandlescope","aria-hidden":"true"}},[this._v("#")]),this._v(" Nan::EscapableHandleScope")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Similar to "),t("a",{attrs:{href:"#api_nan_handle_scope"}},[t("code",[this._v("Nan::HandleScope")])]),this._v(" but should be used in cases where a function needs to return a V8 JavaScript type that has been created within it.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("class Nan::EscapableHandleScope {\n public:\n  Nan::EscapableHandleScope();\n  static int NumberOfHandles();\n  template<typename T> v8::Local<T> Escape(v8::Local<T> value);\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Use "),t("code",[this._v("Escape(value)")]),this._v(" to return the object.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("v8::Local<v8::Object> EmptyObj() {\n  Nan::EscapableHandleScope scope;\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n  return scope.Escape(obj);\n}\n")])])])}],!1,null,null,null);t.default=s.exports}}]);