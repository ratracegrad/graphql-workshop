(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{365:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("A sax-style parser for XML and HTML.")]),t._v(" "),s("p",[t._v("Designed with "),s("a",{attrs:{href:"http://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("node"),s("OutboundLink")],1),t._v(" in mind, but should work fine in\nthe browser or other CommonJS implementations.")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("Unknown entities will fail in strict mode, and in loose mode, will pass\nthrough unmolested.")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),s("p",[t._v("Pass the following arguments to the parser function.  All are optional.")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("Settings supported:")]),t._v(" "),s("ul",[t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),s("li",[s("code",[t._v("strictEntities")]),t._v(" - Boolean. If true, only parse "),s("a",{attrs:{href:"http://www.w3.org/TR/REC-xml/#sec-predefined-ent",target:"_blank",rel:"noopener noreferrer"}},[t._v("predefined XML\nentities"),s("OutboundLink")],1),t._v("\n("),s("code",[t._v("&amp;")]),t._v(", "),s("code",[t._v("&apos;")]),t._v(", "),s("code",[t._v("&gt;")]),t._v(", "),s("code",[t._v("&lt;")]),t._v(", and "),s("code",[t._v("&quot;")]),t._v(")")])]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),s("p",[t._v("At all times, the parser object will have the following members:")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),s("p",[t._v("And a bunch of other stuff that you probably shouldn't touch.")]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),s("p",[t._v("It's best to write a failing test if you find an issue.  I will always\naccept pull requests with failing tests if they demonstrate intended\nbehavior, but it is very hard to figure out what issue you're describing\nwithout a test.  Writing a test is also the best way for you yourself\nto figure out if you really understand the issue you think you have with\nsax-js.")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"sax-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sax-js","aria-hidden":"true"}},[this._v("#")]),this._v(" sax js")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"what-this-is"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-this-is","aria-hidden":"true"}},[this._v("#")]),this._v(" What This Is")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("A very simple tool to parse through an XML string.")]),this._v(" "),e("li",[this._v("A stepping stone to a streaming HTML parser.")]),this._v(" "),e("li",[this._v("A handy way to deal with RSS and other mostly-ok-but-kinda-broken XML\ndocs.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"what-this-is-probably-not"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-this-is-probably-not","aria-hidden":"true"}},[this._v("#")]),this._v(" What This Is (probably) Not")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("An HTML Parser - That's a fine goal, but this isn't it.  It's just\nXML.")]),t._v(" "),s("li",[t._v("A DOM Builder - You can use it to build an object model out of XML,\nbut it doesn't do that out of the box.")]),t._v(" "),s("li",[t._v("XSLT - No DOM = no querying.")]),t._v(" "),s("li",[t._v("100% Compliant with (some other SAX implementation) - Most SAX\nimplementations are in Java and do a lot more than this does.")]),t._v(" "),s("li",[t._v("An XML Validator - It does a little validation when in strict mode, but\nnot much.")]),t._v(" "),s("li",[t._v("A Schema-Aware XSD Thing - Schemas are an exercise in fetishistic\nmasochism.")]),t._v(" "),s("li",[t._v("A DTD-aware Thing - Fetching DTDs is a much bigger job.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"regarding-doctypes-and-entitys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regarding-doctypes-and-entitys","aria-hidden":"true"}},[this._v("#")]),this._v(" Regarding "),e("code",[this._v("<!DOCTYPE")]),this._v("s and "),e("code",[this._v("<!ENTITY")]),this._v("s")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The parser will handle the basic XML entities in text nodes and attribute\nvalues: "),e("code",[this._v("&amp; &lt; &gt; &apos; &quot;")]),this._v(". It's possible to define additional\nentities in XML by putting them in the DTD. This parser doesn't do anything\nwith that. If you want to listen to the "),e("code",[this._v("ondoctype")]),this._v(" event, and then fetch\nthe doctypes, and read the entities and add them to "),e("code",[this._v("parser.ENTITIES")]),this._v(", then\nbe my guest.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Usage")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/sax"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  strict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set to false for html-mode")]),t._v("\n  parser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// an error happened.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ontext")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// got some text.  t is the string of text.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onopentag")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// opened a tag.  node has "name" and "attributes"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onattribute")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("attr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// an attribute.  attr has "name" and "value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onend")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parser stream is done, and ready to have more stuff written to it.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nparser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<xml>Hello, <who name=\"world\">world</who>!</xml>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stream usage")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// takes the same options as the parser")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" saxStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sax"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsaxStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unhandled errors will throw, since this is a proper node")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event emitter.")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clear the error")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsaxStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"opentag"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same object as above")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pipe is supported, and it's readable/writable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same chunks coming in also go out.")]),t._v("\nfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("saxStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file-copy.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[this._v("#")]),this._v(" Arguments")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("strict")]),this._v(" - Boolean. Whether or not to be a jerk. Default: "),e("code",[this._v("false")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("opt")]),this._v(" - Object bag of settings regarding string formatting.  All default to "),e("code",[this._v("false")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("trim")]),this._v(" - Boolean. Whether or not to trim text and comment nodes.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("normalize")]),this._v(" - Boolean. If true, then turn any whitespace into a single\nspace.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("lowercase")]),this._v(" - Boolean. If true, then lowercase tag names and attribute names\nin loose mode, rather than uppercasing them.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("xmlns")]),this._v(" - Boolean. If true, then namespaces are supported.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("position")]),this._v(" - Boolean. If false, then don't track line/col/position.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[this._v("#")]),this._v(" Methods")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("write")]),this._v(" - Write bytes onto the stream. You don't have to do this all at\nonce. You can keep writing as much as you want.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("close")]),this._v(" - Close the stream. Once closed, no more data may be written until\nit is done processing the buffer, which is signaled by the "),e("code",[this._v("end")]),this._v(" event.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("resume")]),this._v(" - To gracefully handle errors, assign a listener to the "),e("code",[this._v("error")]),this._v("\nevent. Then, when the error is taken care of, you can call "),e("code",[this._v("resume")]),this._v(" to\ncontinue parsing. Otherwise, the parser will not continue while in an error\nstate.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"members"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#members","aria-hidden":"true"}},[this._v("#")]),this._v(" Members")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("line")]),this._v(", "),e("code",[this._v("column")]),this._v(", "),e("code",[this._v("position")]),this._v(" - Indications of the position in the XML\ndocument where the parser currently is looking.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("startTagPosition")]),this._v(" - Indicates the position where the current tag starts.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("closed")]),this._v(" - Boolean indicating whether or not the parser can be written to.\nIf it's "),e("code",[this._v("true")]),this._v(", then wait for the "),e("code",[this._v("ready")]),this._v(" event to write again.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("strict")]),this._v(" - Boolean indicating whether or not the parser is a jerk.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("opt")]),this._v(" - Any options passed into the constructor.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("tag")]),this._v(" - The current tag being dealt with.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[this._v("#")]),this._v(" Events")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("All events emit with a single argument. To listen to an event, assign a\nfunction to "),e("code",[this._v("on<eventname>")]),this._v(". Functions get executed in the this-context of\nthe parser object. The list of supported events are also in the exported\n"),e("code",[this._v("EVENTS")]),this._v(" array.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("When using the stream interface, assign handlers using the EventEmitter\n"),e("code",[this._v("on")]),this._v(" function in the normal fashion.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("error")]),t._v(" - Indication that something bad happened. The error will be hanging\nout on "),s("code",[t._v("parser.error")]),t._v(", and must be deleted before parsing can continue. By\nlistening to this event, you can keep an eye on that kind of stuff. Note:\nthis happens "),s("em",[t._v("much")]),t._v(" more in strict mode. Argument: instance of "),s("code",[t._v("Error")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("text")]),this._v(" - Text node. Argument: string of text.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("doctype")]),this._v(" - The "),e("code",[this._v("<!DOCTYPE")]),this._v(" declaration. Argument: doctype string.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("processinginstruction")]),t._v(" - Stuff like "),s("code",[t._v('<?xml foo="blerg" ?>')]),t._v(". Argument:\nobject with "),s("code",[t._v("name")]),t._v(" and "),s("code",[t._v("body")]),t._v(" members. Attributes are not parsed, as\nprocessing instructions have implementation dependent semantics.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("sgmldeclaration")]),this._v(" - Random SGML declarations. Stuff like "),e("code",[this._v("<!ENTITY p>")]),this._v("\nwould trigger this kind of event. This is a weird thing to support, so it\nmight go away at some point. SAX isn't intended to be used to parse SGML,\nafter all.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("opentagstart")]),t._v(" - Emitted immediately when the tag name is available,\nbut before any attributes are encountered.  Argument: object with a\n"),s("code",[t._v("name")]),t._v(" field and an empty "),s("code",[t._v("attributes")]),t._v(" set.  Note that this is the\nsame object that will later be emitted in the "),s("code",[t._v("opentag")]),t._v(" event.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("opentag")]),t._v(" - An opening tag. Argument: object with "),s("code",[t._v("name")]),t._v(" and "),s("code",[t._v("attributes")]),t._v(".\nIn non-strict mode, tag names are uppercased, unless the "),s("code",[t._v("lowercase")]),t._v("\noption is set.  If the "),s("code",[t._v("xmlns")]),t._v(" option is set, then it will contain\nnamespace binding information on the "),s("code",[t._v("ns")]),t._v(" member, and will have a\n"),s("code",[t._v("local")]),t._v(", "),s("code",[t._v("prefix")]),t._v(", and "),s("code",[t._v("uri")]),t._v(" member.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("closetag")]),this._v(" - A closing tag. In loose mode, tags are auto-closed if their\nparent closes. In strict mode, well-formedness is enforced. Note that\nself-closing tags will have "),e("code",[this._v("closeTag")]),this._v(" emitted immediately after "),e("code",[this._v("openTag")]),this._v(".\nArgument: tag name.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("attribute")]),t._v(" - An attribute node.  Argument: object with "),s("code",[t._v("name")]),t._v(" and "),s("code",[t._v("value")]),t._v(".\nIn non-strict mode, attribute names are uppercased, unless the "),s("code",[t._v("lowercase")]),t._v("\noption is set.  If the "),s("code",[t._v("xmlns")]),t._v(" option is set, it will also contains namespace\ninformation.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("comment")]),this._v(" - A comment node.  Argument: the string of the comment.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("opencdata")]),this._v(" - The opening tag of a "),e("code",[this._v("<![CDATA[")]),this._v(" block.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("cdata")]),t._v(" - The text of a "),s("code",[t._v("<![CDATA[")]),t._v(" block. Since "),s("code",[t._v("<![CDATA[")]),t._v(" blocks can get\nquite large, this event may fire multiple times for a single block, if it\nis broken up into multiple "),s("code",[t._v("write()")]),t._v("s. Argument: the string of random\ncharacter data.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("closecdata")]),this._v(" - The closing tag ("),e("code",[this._v("]]>")]),this._v(") of a "),e("code",[this._v("<![CDATA[")]),this._v(" block.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("opennamespace")]),this._v(" - If the "),e("code",[this._v("xmlns")]),this._v(" option is set, then this event will\nsignal the start of a new namespace binding.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("closenamespace")]),this._v(" - If the "),e("code",[this._v("xmlns")]),this._v(" option is set, then this event will\nsignal the end of a namespace binding.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("end")]),this._v(" - Indication that the closed stream has ended.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ready")]),this._v(" - Indication that the stream has reset, and is ready to be written\nto.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("noscript")]),t._v(" - In non-strict mode, "),s("code",[t._v("<script>")]),t._v(" tags trigger a "),s("code",[t._v('"script"')]),t._v("\nevent, and their contents are not checked for special xml characters.\nIf you pass "),s("code",[t._v("noscript: true")]),t._v(", then this behavior is suppressed.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"reporting-problems"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reporting-problems","aria-hidden":"true"}},[this._v("#")]),this._v(" Reporting Problems")])}],!1,null,null,null);e.default=a.exports}}]);