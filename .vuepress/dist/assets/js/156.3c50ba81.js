(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{323:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"has-unicode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has-unicode","aria-hidden":"true"}},[t._v("#")]),t._v(" has-unicode")]),t._v(" "),s("p",[t._v("Try to guess if your terminal supports unicode")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hasUnicode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"has-unicode"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasUnicode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the terminal probably has unicode support")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hasUnicode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"has-unicode"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tryHarder\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasUnicode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("unicodeSupported")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unicodeSupported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the terminal probably has unicode support")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"detecting-unicode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#detecting-unicode","aria-hidden":"true"}},[t._v("#")]),t._v(" Detecting Unicode")]),t._v(" "),s("p",[t._v("What we actually detect is UTF-8 support, as that's what Node itself supports.\nIf you have a UTF-16 locale then you won't be detected as unicode capable.")]),t._v(" "),s("h3",{attrs:{id:"windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows","aria-hidden":"true"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),s("p",[t._v("Since at least Windows 7, "),s("code",[t._v("cmd")]),t._v(" and "),s("code",[t._v("powershell")]),t._v(" have been unicode capable,\nbut unfortunately even then it's not guaranteed. In many localizations it\nstill uses legacy code pages and there's no facility short of running\nprograms or linking C++ that will let us detect this. As such, we\nreport any Windows installation as NOT unicode capable, and recommend\nthat you encourage your users to override this via config.")]),t._v(" "),s("h3",{attrs:{id:"unix-like-operating-systems"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unix-like-operating-systems","aria-hidden":"true"}},[t._v("#")]),t._v(" Unix Like Operating Systems")]),t._v(" "),s("p",[t._v("We look at the environment variables "),s("code",[t._v("LC_ALL")]),t._v(", "),s("code",[t._v("LC_CTYPE")]),t._v(", and "),s("code",[t._v("LANG")]),t._v(" in\nthat order.  For "),s("code",[t._v("LC_ALL")]),t._v(" and "),s("code",[t._v("LANG")]),t._v(", it looks for "),s("code",[t._v(".UTF-8")]),t._v(" in the value.\nFor "),s("code",[t._v("LC_CTYPE")]),t._v(" it looks to see if the value is "),s("code",[t._v("UTF-8")]),t._v(".  This is sufficient\nfor most POSIX systems.  While locale data can be put in "),s("code",[t._v("/etc/locale.conf")]),t._v("\nas well, AFAIK it's always copied into the environment.")])])}],!1,null,null,null);a.default=n.exports}}]);