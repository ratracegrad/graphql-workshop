(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{216:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"chokidar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chokidar","aria-hidden":"true"}},[t._v("#")]),t._v(" Chokidar "),s("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/dw/chokidar.svg",alt:"Weekly downloads"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/dy/chokidar.svg",alt:"Yearly downloads"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://travis-ci.org/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/travis/paulmillr/chokidar/master.svg?label=Mac%20OSX%20%26%20Linux",alt:"Mac/Linux Build Status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://ci.appveyor.com/project/paulmillr/chokidar/branch/master",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/appveyor/ci/paulmillr/chokidar/master.svg?label=Windows",alt:"Windows Build status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://coveralls.io/r/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://coveralls.io/repos/paulmillr/chokidar/badge.svg",alt:"Coverage Status"}}),s("OutboundLink")],1)]),t._v(" "),t._m(0),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/chokidar",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://nodei.co/npm/chokidar.png",alt:"NPM"}}),s("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),s("ul",[s("li",[t._v("Doesn't report filenames on MacOS.")]),t._v(" "),s("li",[t._v("Doesn't report events at all when using editors like Sublime on MacOS.")]),t._v(" "),s("li",[t._v("Often reports events twice.")]),t._v(" "),t._m(3),t._v(" "),s("li",[t._v("Has "),s("a",{attrs:{href:"https://github.com/nodejs/node/search?q=fs.watch&type=Issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("a lot of other issues"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Does not provide an easy way to recursively watch file trees.")])]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("Chokidar resolves these problems.")]),t._v(" "),s("p",[t._v("Initially made for "),s("strong",[s("a",{attrs:{href:"http://brunch.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brunch"),s("OutboundLink")],1)]),t._v(" (an ultra-swift web app build tool), it is now used in\n"),s("a",{attrs:{href:"https://github.com/gulpjs/gulp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gulp"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"http://karma-runner.github.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("karma"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"https://github.com/Unitech/PM2",target:"_blank",rel:"noopener noreferrer"}},[t._v("PM2"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"http://browserify.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("browserify"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"http://webpack.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"http://www.browsersync.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BrowserSync"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"https://github.com/microsoft/vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft's Visual Studio Code"),s("OutboundLink")],1),t._v(",\nand "),s("a",{attrs:{href:"https://www.npmjs.org/browse/depended/chokidar/",target:"_blank",rel:"noopener noreferrer"}},[t._v("many others"),s("OutboundLink")],1),t._v(".\nIt has proven itself in production environments.")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("Install with npm:")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("ul",[s("li",[s("code",[t._v("ignored")]),t._v(" ("),s("a",{attrs:{href:"https://github.com/es128/anymatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("anymatch"),s("OutboundLink")],1),t._v("-compatible definition)\nDefines files/paths to be ignored. The whole relative or absolute path is\ntested, not just filename. If a function with two arguments is provided, it\ngets called twice per path - once with a single argument (the path), second\ntime with two arguments (the path and the\n"),s("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("fs.Stats")]),s("OutboundLink")],1),t._v("\nobject of that path).")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24)]),t._v(" "),t._m(25),t._v(" "),s("ul",[t._m(26),t._v(" "),s("li",[s("em",[t._v("Polling-specific settings")]),t._v(" (effective when "),s("code",[t._v("usePolling: true")]),t._v(")\n"),s("ul",[t._m(27),t._v(" "),s("li",[s("code",[t._v("binaryInterval")]),t._v(" (default: "),s("code",[t._v("300")]),t._v("). Interval of file system\npolling for binary files.\n("),s("a",{attrs:{href:"https://github.com/sindresorhus/binary-extensions/blob/master/binary-extensions.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("see list of binary extensions"),s("OutboundLink")],1),t._v(")")])])]),t._v(" "),t._m(28),t._v(" "),s("li",[s("code",[t._v("alwaysStat")]),t._v(" (default: "),s("code",[t._v("false")]),t._v("). If relying upon the\n"),s("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("fs.Stats")]),s("OutboundLink")],1),t._v("\nobject that may get passed with "),s("code",[t._v("add")]),t._v(", "),s("code",[t._v("addDir")]),t._v(", and "),s("code",[t._v("change")]),t._v(" events, set\nthis to "),s("code",[t._v("true")]),t._v(" to ensure it is provided even in cases where it wasn't\nalready available from the underlying watch events.")]),t._v(" "),t._m(29),t._v(" "),t._m(30)]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),s("p",[t._v("If you need a CLI interface for your file watching, check out\n"),s("a",{attrs:{href:"https://github.com/kimmobrunfeldt/chokidar-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("chokidar-cli"),s("OutboundLink")],1),t._v(", allowing you to\nexecute a command on each change, or get a stdio stream of change events.")]),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),s("p",[t._v("The MIT License (MIT)")]),t._v(" "),s("p",[t._v("Copyright (c) 2012-2019 Paul Miller (https://paulmillr.com) & Elan Shanker")]),t._v(" "),s("p",[t._v("Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:")]),t._v(" "),s("p",[t._v("The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.")]),t._v(" "),s("p",[t._v("THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("A neat wrapper around node.js fs.watch / fs.watchFile / FSEvents.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"why"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why","aria-hidden":"true"}},[this._v("#")]),this._v(" Why?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Node.js "),e("code",[this._v("fs.watch")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("Emits most changes as "),e("code",[this._v("rename")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Node.js "),e("code",[this._v("fs.watchFile")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Almost as bad at event handling.")]),this._v(" "),e("li",[this._v("Also does not provide any recursive watching.")]),this._v(" "),e("li",[this._v("Results in high CPU utilization.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"how"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how","aria-hidden":"true"}},[this._v("#")]),this._v(" How?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Chokidar does still rely on the Node.js core "),e("code",[this._v("fs")]),this._v(" module, but when using\n"),e("code",[this._v("fs.watch")]),this._v(" and "),e("code",[this._v("fs.watchFile")]),this._v(" for watching, it normalizes the events it\nreceives, often checking for truth by getting file stats and/or dir contents.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("On MacOS, chokidar by default uses a native extension exposing the Darwin\n"),e("code",[this._v("FSEvents")]),this._v(" API. This provides very efficient recursive watching compared with\nimplementations like "),e("code",[this._v("kqueue")]),this._v(" available on most *nix platforms. Chokidar still\ndoes have to do some work to normalize the events received that way as well.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("On other platforms, the "),e("code",[this._v("fs.watch")]),this._v("-based implementation is the default, which\navoids polling and keeps CPU usage down. Be advised that chokidar will initiate\nwatchers recursively for everything within scope of the paths that have been\nspecified, so be judicious about not wasting system resources by watching much\nmore than needed.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[this._v("#")]),this._v(" Getting started")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("npm install chokidar\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Then "),e("code",[this._v("require")]),this._v(" and use it in your code:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" chokidar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chokidar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-liner for current directory, ignores .dotfiles")]),t._v("\nchokidar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ignored"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(^|[\\/\\\\])\\../")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example of a more typical implementation structure:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize watcher.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" watcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chokidar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file, dir, glob, or array'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ignored"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(^|[\\/\\\\])\\../")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  persistent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Something to use when events are received.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add event listeners.")]),t._v("\nwatcher\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`File ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been added`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`File ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been changed`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unlink'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`File ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been removed`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// More possible events.")]),t._v("\nwatcher\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'addDir'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`Directory ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been added`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unlinkDir'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`Directory ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been removed`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`Watcher error: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ready'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial scan complete. Ready for changes'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'raw'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" details")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Raw event info:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" details"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'add', 'addDir' and 'change' events also receive stat() results as second")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// argument when available: http://nodejs.org/api/fs.html#fs_class_fs_stats")]),t._v("\nwatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stats")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`File ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" changed size to ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watch new files.")]),t._v("\nwatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file-2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file-3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**/other-file*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get list of actual paths being watched on the filesystem")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" watchedPaths "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" watcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWatched")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Un-watch some files.")]),t._v("\nwatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stop watching.")]),t._v("\nwatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Full list of options. See below for descriptions. (do not use this example)")]),t._v("\nchokidar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  persistent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  ignored"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ignoreInitial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  followSymlinks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  disableGlobbing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  usePolling"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  binaryInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  alwaysStat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  depth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  awaitWriteFinish"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stabilityThreshold"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pollInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  ignorePermissionErrors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  atomic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or a custom 'atomicity delay', in milliseconds (default 100)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api","aria-hidden":"true"}},[this._v("#")]),this._v(" API")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("chokidar.watch(paths, [options])")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("paths")]),this._v(" (string or array of strings). Paths to files, dirs to be watched\nrecursively, or glob patterns.")]),this._v(" "),e("li",[e("code",[this._v("options")]),this._v(" (object) Options object as defined below:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"persistence"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#persistence","aria-hidden":"true"}},[this._v("#")]),this._v(" Persistence")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("persistent")]),t._v(" (default: "),s("code",[t._v("true")]),t._v("). Indicates whether the process\nshould continue to run as long as files are being watched. If set to\n"),s("code",[t._v("false")]),t._v(" when using "),s("code",[t._v("fsevents")]),t._v(" to watch, no more events will be emitted\nafter "),s("code",[t._v("ready")]),t._v(", even if the process continues to run.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"path-filtering"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path-filtering","aria-hidden":"true"}},[this._v("#")]),this._v(" Path filtering")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("ignoreInitial")]),t._v(" (default: "),s("code",[t._v("false")]),t._v("). If set to "),s("code",[t._v("false")]),t._v(" then "),s("code",[t._v("add")]),t._v("/"),s("code",[t._v("addDir")]),t._v(" events are also emitted for matching paths while\ninstantiating the watching as chokidar discovers these file paths (before the "),s("code",[t._v("ready")]),t._v(" event).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("followSymlinks")]),this._v(" (default: "),e("code",[this._v("true")]),this._v("). When "),e("code",[this._v("false")]),this._v(", only the\nsymlinks themselves will be watched for changes instead of following\nthe link references and bubbling events through the link's path.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("cwd")]),this._v(" (no default). The base directory from which watch "),e("code",[this._v("paths")]),this._v(" are to be\nderived. Paths emitted with events will be relative to this.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("disableGlobbing")]),t._v(" (default: "),s("code",[t._v("false")]),t._v("). If set to "),s("code",[t._v("true")]),t._v(" then the strings passed to "),s("code",[t._v(".watch()")]),t._v(" and "),s("code",[t._v(".add()")]),t._v(" are treated as\nliteral path names, even if they look like globs.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"performance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#performance","aria-hidden":"true"}},[this._v("#")]),this._v(" Performance")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("usePolling")]),t._v(" (default: "),s("code",[t._v("false")]),t._v(").\nWhether to use fs.watchFile (backed by polling), or fs.watch. If polling\nleads to high CPU utilization, consider setting this to "),s("code",[t._v("false")]),t._v(". It is\ntypically necessary to "),s("strong",[t._v("set this to "),s("code",[t._v("true")]),t._v(" to successfully watch files over\na network")]),t._v(", and it may be necessary to successfully watch files in other\nnon-standard situations. Setting to "),s("code",[t._v("true")]),t._v(" explicitly on MacOS overrides the\n"),s("code",[t._v("useFsEvents")]),t._v(" default. You may also set the CHOKIDAR_USEPOLLING env variable\nto true (1) or false (0) in order to override this option.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("interval")]),this._v(" (default: "),e("code",[this._v("100")]),this._v("). Interval of file system polling. You may also\nset the CHOKIDAR_INTERVAL env variable to override this option.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("useFsEvents")]),t._v(" (default: "),s("code",[t._v("true")]),t._v(" on MacOS). Whether to use the\n"),s("code",[t._v("fsevents")]),t._v(" watching interface if available. When set to "),s("code",[t._v("true")]),t._v(" explicitly\nand "),s("code",[t._v("fsevents")]),t._v(" is available this supercedes the "),s("code",[t._v("usePolling")]),t._v(" setting. When\nset to "),s("code",[t._v("false")]),t._v(" on MacOS, "),s("code",[t._v("usePolling: true")]),t._v(" becomes the default.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("depth")]),this._v(" (default: "),e("code",[this._v("undefined")]),this._v("). If set, limits how many levels of\nsubdirectories will be traversed.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("awaitWriteFinish")]),t._v(" (default: "),s("code",[t._v("false")]),t._v(").\nBy default, the "),s("code",[t._v("add")]),t._v(" event will fire when a file first appears on disk, before\nthe entire file has been written. Furthermore, in some cases some "),s("code",[t._v("change")]),t._v("\nevents will be emitted while the file is being written. In some cases,\nespecially when watching for large files there will be a need to wait for the\nwrite operation to finish before responding to a file creation or modification.\nSetting "),s("code",[t._v("awaitWriteFinish")]),t._v(" to "),s("code",[t._v("true")]),t._v(" (or a truthy value) will poll file size,\nholding its "),s("code",[t._v("add")]),t._v(" and "),s("code",[t._v("change")]),t._v(" events until the size does not change for a\nconfigurable amount of time. The appropriate duration setting is heavily\ndependent on the OS and hardware. For accurate detection this parameter should\nbe relatively high, making file watching much less responsive.\nUse with caution.\n"),s("ul",[s("li",[s("em",[s("code",[t._v("options.awaitWriteFinish")]),t._v(" can be set to an object in order to adjust\ntiming params:")])]),t._v(" "),s("li",[s("code",[t._v("awaitWriteFinish.stabilityThreshold")]),t._v(" (default: 2000). Amount of time in\nmilliseconds for a file size to remain constant before emitting its event.")]),t._v(" "),s("li",[s("code",[t._v("awaitWriteFinish.pollInterval")]),t._v(" (default: 100). File size polling interval.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"errors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#errors","aria-hidden":"true"}},[this._v("#")]),this._v(" Errors")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("ignorePermissionErrors")]),t._v(" (default: "),s("code",[t._v("false")]),t._v("). Indicates whether to watch files\nthat don't have read permissions if possible. If watching fails due to "),s("code",[t._v("EPERM")]),t._v("\nor "),s("code",[t._v("EACCES")]),t._v(" with this set to "),s("code",[t._v("true")]),t._v(", the errors will be suppressed silently.")]),t._v(" "),s("li",[s("code",[t._v("atomic")]),t._v(" (default: "),s("code",[t._v("true")]),t._v(" if "),s("code",[t._v("useFsEvents")]),t._v(" and "),s("code",[t._v("usePolling")]),t._v(" are "),s("code",[t._v("false")]),t._v(').\nAutomatically filters out artifacts that occur when using editors that use\n"atomic writes" instead of writing directly to the source file. If a file is\nre-added within 100 ms of being deleted, Chokidar emits a '),s("code",[t._v("change")]),t._v(" event\nrather than "),s("code",[t._v("unlink")]),t._v(" then "),s("code",[t._v("add")]),t._v(". If the default of 100 ms does not work well\nfor you, you can override it by setting "),s("code",[t._v("atomic")]),t._v(" to a custom value, in\nmilliseconds.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"methods-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Methods & Events")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("chokidar.watch()")]),this._v(" produces an instance of "),e("code",[this._v("FSWatcher")]),this._v(". Methods of "),e("code",[this._v("FSWatcher")]),this._v(":")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v(".add(path / paths)")]),t._v(": Add files, directories, or glob patterns for tracking.\nTakes an array of strings or just one string.")]),t._v(" "),s("li",[s("code",[t._v(".on(event, callback)")]),t._v(": Listen for an FS event.\nAvailable events: "),s("code",[t._v("add")]),t._v(", "),s("code",[t._v("addDir")]),t._v(", "),s("code",[t._v("change")]),t._v(", "),s("code",[t._v("unlink")]),t._v(", "),s("code",[t._v("unlinkDir")]),t._v(", "),s("code",[t._v("ready")]),t._v(",\n"),s("code",[t._v("raw")]),t._v(", "),s("code",[t._v("error")]),t._v(".\nAdditionally "),s("code",[t._v("all")]),t._v(" is available which gets emitted with the underlying event\nname and path for every event other than "),s("code",[t._v("ready")]),t._v(", "),s("code",[t._v("raw")]),t._v(", and "),s("code",[t._v("error")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v(".unwatch(path / paths)")]),t._v(": Stop watching files, directories, or glob patterns.\nTakes an array of strings or just one string.")]),t._v(" "),s("li",[s("code",[t._v(".close()")]),t._v(": Removes all listeners from watched files.")]),t._v(" "),s("li",[s("code",[t._v(".getWatched()")]),t._v(": Returns an object representing all the paths on the file\nsystem being watched by this "),s("code",[t._v("FSWatcher")]),t._v(" instance. The object's keys are all the\ndirectories (using absolute paths unless the "),s("code",[t._v("cwd")]),t._v(" option was used), and the\nvalues are arrays of the names of the items contained in each directory.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[this._v("#")]),this._v(" CLI")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"install-troubleshooting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-troubleshooting","aria-hidden":"true"}},[this._v("#")]),this._v(" Install Troubleshooting")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("code",[t._v("npm WARN optional dep failed, continuing fsevents@n.n.n")])]),t._v(" "),s("ul",[s("li",[t._v("This message is normal part of how "),s("code",[t._v("npm")]),t._v(" handles optional dependencies and is\nnot indicative of a problem. Even if accompanied by other related error messages,\nChokidar should function properly.")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v('ERR! stack Error: Python executable "python" is v3.4.1, which is not supported by gyp.')])]),t._v(" "),s("ul",[s("li",[t._v("You should be able to resolve this by installing python 2.7 and running:\n"),s("code",[t._v("npm config set python python2.7")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("gyp ERR! stack Error: not found: make")])]),t._v(" "),s("ul",[s("li",[t._v("On Mac, install the XCode command-line tools")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])}],!1,null,null,null);e.default=a.exports}}]);